(|dynetwork|
 (|enemy_TCC1| 0
  ("enemy_TCC1-1" NIL 3383918433 3383918480
   ("" (EXPAND "monotonic?")
    (("" (EXPAND "<=")
      (("" (SKOSIMP*)
        (("" (EXPAND "F")
          (("" (REWRITE "monotonic_choice")
            (("1" (DELETE 2)
              (("1" (REWRITE "monotonic_choice3")
                (("1" (DELETE 2)
                  (("1" (SKOLEM!)
                    (("1" (REWRITE "monotonic_pref")
                      (("1" (INST -1 ("add(i!1`3, x!1)")) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (DELETE 2)
              (("2" (REWRITE "monotonic_choice")
                (("1" (DELETE 2) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (DELETE 2) (("2" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   (NIL
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    NIL (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL) NIL NIL
    (I FORMAL-NONEMPTY-TYPE-DECL NIL |dynetwork| NIL)
    (M FORMAL-TYPE-DECL NIL |dynetwork| NIL) NIL NIL
    (|trans?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|trans| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (trans?)]" |dynetwork| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL) NIL
    (|\|-| FORMAL-CONST-DECL "setof[[setof[M], M]]" |dynetwork| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|rec| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (rec?)]" |dynetwork| NIL)
    (|leak?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|leak| ADT-CONSTRUCTOR-DECL "[M -> (leak?)]" |dynetwork| NIL)
    (|event| TYPE-DECL NIL |dynetwork| NIL) NIL NIL
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) NIL NIL NIL NIL
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL) NIL
    (F CONST-DECL "process[event]" |dynetwork| NIL) NIL)
   4489 961 NIL NIL))
 (|enemy_def| 0
  (|enemy_def-1| NIL 3383915907 3383915981
   ("" (EXPAND "enemy")
    (("" (SKOLEM!)
      (("" (USE "fixed_point" ("G" "F"))
        (("1" (REPLACE -1 + RL)
          (("1" (EXPAND "F" 1 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (USE "enemy_TCC1") NIL NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|event| TYPE-DECL NIL |dynetwork| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (M FORMAL-TYPE-DECL NIL |dynetwork| NIL)
    (F CONST-DECL "process[event]" |dynetwork| NIL) NIL NIL NIL
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (|enemy| CONST-DECL "[setof[M] -> process[event]]" |dynetwork| NIL))
   9 9 NIL NIL))
 (|invariant| 0
  (|invariant-1| NIL 3383915907 3383915983
   ("" (AUTO-REWRITE-THEORY "sets")
    (("" (SKOSIMP)
      (("" (EXPAND "network")
        (("" (EXPAND "RankNetwork")
          (("" (PARALLEL)
            (("" (DELETE 2)
              (("" (INST 1 "trans?" "rec?")
                (("" (SPLIT)
                  (("1" (DELETE -1 -2) (("1" (GRIND) NIL NIL)) NIL)
                   ("2" (DELETE -1 -2) (("2" (GRIND) NIL NIL)) NIL)
                   ("3" (DELETE -1 -2) (("3" (GRIND) NIL NIL)) NIL)
                   ("4" (DELETE -2)
                    (("4" (REWRITE "restriction_elim")
                      (("4" (DELETE 2)
                        (("4" (EXPAND "RankEnemy") (("4" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("5" (DELETE -1)
                    (("5" (INTERLEAVING2)
                      (("5" (INST?)
                        (("5" (EXPAND "RankUser") (("5" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|RankNetwork| CONST-DECL "setof[trace[event]]" |dynetwork| NIL) NIL
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|RankEnemy| CONST-DECL "setof[trace[event]]" |dynetwork| NIL) NIL NIL
    (|RankUser| CONST-DECL "setof[trace[event]]" |dynetwork| NIL)
    (|event| TYPE-DECL NIL |dynetwork| NIL) NIL
    (I FORMAL-NONEMPTY-TYPE-DECL NIL |dynetwork| NIL)
    (INIT FORMAL-CONST-DECL "setof[M]" |dynetwork| NIL)
    (|enemy| CONST-DECL "[setof[M] -> process[event]]" |dynetwork| NIL)
    (M FORMAL-TYPE-DECL NIL |dynetwork| NIL) NIL NIL
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|trans?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|union| CONST-DECL "set" |sets| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) NIL
    (|msg| SHARED-ADT-ACCESSOR-DECL "[event -> M]" |dynetwork| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) NIL NIL
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|disjoint?| CONST-DECL "bool" |sets| NIL)
    (|complement| CONST-DECL "set" |sets| NIL)
    (|network| CONST-DECL "process[event]" |dynetwork| NIL))
   260 237 NIL NIL))
 (|enemy_prop2| 0
  (|enemy_prop2-1| NIL 3383915907 3383915986
   ("" (AUTO-REWRITE-THEORY "sets")
    (("" (SKOSIMP)
      (("" (EXPAND "enemy")
        (("" (EXPAND "RankEnemy")
          (("" (FIX2)
            (("1" (DELETE 2)
              (("1" (INST 1 "q1(rho!1)" "q2(rho!1)")
                (("1" (SPLIT)
                  (("1" (SKOLEM!)
                    (("1" (SPLIT)
                      (("1" (EXPAND "q1") (("1" (GROUND) NIL NIL)) NIL)
                       ("2" (FLATTEN)
                        (("2" (EXPAND "q2")
                          (("2" (ASSERT)
                            (("2" (SPLIT)
                              (("1" (SKOSIMP)
                                (("1" (INST? -4)
                                  (("1" (SPLIT)
                                    (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)
                                     ("2" (PROPAX) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (DELETE -1 -2)
                    (("2" (SKOSIMP*)
                      (("2" (EXPAND "F")
                        (("2" (CHOICE)
                          (("1" (CHOICE3)
                            (("1" (PREFIX)
                              (("1" (EXPAND "q2") (("1" (ASSERT) NIL NIL)) NIL)
                               ("2" (DELETE 2)
                                (("2" (INST?)
                                  (("2" (EXPAND "q1" -1)
                                    (("2" (LEMMA "uniform_strengthen[event]")
                                      (("2" (INST?)
                                        (("2"
                                          (INST -1 "q1(rho!1)(add(i!2`3, i!1))"
                                           "q2(rho!1)(add(i!2`3, i!1))")
                                          (("2" (ASSERT)
                                            (("2" (DELETE -2 2)
                                              (("2" (SKOLEM!)
                                                (("2" (GROUND)
                                                  (("1" (EXPAND "q1")
                                                    (("1" (PROPAX) NIL NIL))
                                                    NIL)
                                                   ("2" (EXPAND "q2")
                                                    (("2" (ASSERT)
                                                      (("2" (GROUND)
                                                        (("2" (SKOSIMP)
                                                          (("2" (SPLIT)
                                                            (("1" (REPLACE -1)
                                                              (("1" (PROPAX)
                                                                NIL NIL))
                                                              NIL)
                                                             ("2" (INST?)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (CHOICE)
                            (("1" (CHOICE3)
                              (("1" (PREFIX)
                                (("1" (DELETE -1 -2 2)
                                  (("1" (TYPEPRED "i!2`3")
                                    (("1" (EXPAND "q2")
                                      (("1" (FLATTEN)
                                        (("1" (INST 1 "i!1")
                                          (("1" (SPLIT)
                                            (("1" (PROPAX) NIL NIL)
                                             ("2" (EXPAND "Gen")
                                              (("2" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (INST?) NIL NIL))
                                NIL))
                              NIL)
                             ("2" (CHOICE3)
                              (("2" (PREFIX)
                                (("1" (DELETE -1 -2 2)
                                  (("1" (TYPEPRED "i!2")
                                    (("1" (EXPAND "q2")
                                      (("1" (FLATTEN)
                                        (("1" (INST 1 "i!1")
                                          (("1" (SPLIT)
                                            (("1" (PROPAX) NIL NIL)
                                             ("2" (EXPAND "Gen")
                                              (("2" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (INST?) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (USE "enemy_TCC1") NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|RankEnemy| CONST-DECL "setof[trace[event]]" |dynetwork| NIL) NIL
    (I FORMAL-NONEMPTY-TYPE-DECL NIL |dynetwork| NIL) NIL NIL
    (|trans| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (trans?)]" |dynetwork| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL) NIL
    (|\|-| FORMAL-CONST-DECL "setof[[setof[M], M]]" |dynetwork| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|rec| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (rec?)]" |dynetwork| NIL)
    (|leak?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|leak| ADT-CONSTRUCTOR-DECL "[M -> (leak?)]" |dynetwork| NIL) NIL NIL NIL
    (|Gen| CONST-DECL "set[M]" |dynetwork| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|q2| CONST-DECL "[set[M] -> pred[event]]" |dynetwork| NIL)
    (|q1| CONST-DECL "[set[M] -> pred[event]]" |dynetwork| NIL)
    (|event| TYPE-DECL NIL |dynetwork| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (M FORMAL-TYPE-DECL NIL |dynetwork| NIL)
    (|complement| CONST-DECL "set" |sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|msg| SHARED-ADT-ACCESSOR-DECL "[event -> M]" |dynetwork| NIL)
    (|trans?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (INIT FORMAL-CONST-DECL "setof[M]" |dynetwork| NIL)
    (F CONST-DECL "process[event]" |dynetwork| NIL) NIL NIL NIL
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|enemy| CONST-DECL "[setof[M] -> process[event]]" |dynetwork| NIL))
   257 239 NIL NIL))
 (|authentication_by_rank| 0
  (|authentication_by_rank-1| NIL 3383915907 3383915990
   ("" (SKOSIMP)
    (("" (REWRITE "authentication_equiv[event]")
      (("" (LEMMA "sat_transitive2[event]")
        ((""
          (INST -1 "every! e: rho!1(msg(e))" "every(complement(T!1))"
           "network(users!1) # R!1")
          (("" (ASSERT)
            (("" (DELETE 2)
              (("" (SPLIT)
                (("1" (EXPAND "network")
                  (("1" (PARALLEL)
                    (("1" (DELETE 2)
                      (("1" (INST 1 "trans?" "rec?")
                        (("1" (GROUND)
                          (("1" (DELETE -) (("1" (GRIND) NIL NIL)) NIL)
                           ("2" (DELETE -) (("2" (GRIND) NIL NIL)) NIL)
                           ("3" (DELETE -) (("3" (GRIND) NIL NIL)) NIL)
                           ("4" (DELETE -3 -4)
                            (("4" (REWRITE "restriction_elim")
                              (("4" (DELETE 2)
                                (("4" (USE "enemy_prop2")
                                  (("4" (EXPAND "RankEnemy")
                                    (("4" (SKOSIMP)
                                      (("4" (EXPAND "subset?" 1)
                                        (("4" (EXPAND "member")
                                          (("4" (SKOSIMP)
                                            (("4" (EXPAND "Gen")
                                              (("4" (INST?)
                                                (("4" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("5" (INTERLEAVING2)
                            (("5" (EXPAND "RankUser")
                              (("5" (INST? -3) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "subset?" 1)
                  (("2" (EXPAND "member")
                    (("2" (LEMMA "every_implies3[event]")
                      (("2" (INST?)
                        (("2" (SPLIT)
                          (("1" (PROPAX) NIL NIL)
                           ("2" (DELETE 2)
                            (("2" (SKOSIMP)
                              (("2" (EXPAND "complement")
                                (("2" (EXPAND "member")
                                  (("2" (INST? -6) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   (NIL (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL) NIL NIL
    (I FORMAL-NONEMPTY-TYPE-DECL NIL |dynetwork| NIL)
    (|network| CONST-DECL "process[event]" |dynetwork| NIL)
    (|event| TYPE-DECL NIL |dynetwork| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (M FORMAL-TYPE-DECL NIL |dynetwork| NIL)
    (|msg| SHARED-ADT-ACCESSOR-DECL "[event -> M]" |dynetwork| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|complement| CONST-DECL "set" |sets| NIL) NIL NIL NIL NIL
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|disjoint?| CONST-DECL "bool" |sets| NIL) NIL
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|enemy_prop2| FORMULA-DECL NIL |dynetwork| NIL)
    (|Gen| CONST-DECL "set[M]" |dynetwork| NIL)
    (|RankEnemy| CONST-DECL "setof[trace[event]]" |dynetwork| NIL)
    (|RankUser| CONST-DECL "setof[trace[event]]" |dynetwork| NIL) NIL NIL NIL
    (INIT FORMAL-CONST-DECL "setof[M]" |dynetwork| NIL)
    (|enemy| CONST-DECL "[setof[M] -> process[event]]" |dynetwork| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|trans?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|union| CONST-DECL "set" |sets| NIL) NIL NIL
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    NIL)
   448 391 NIL NIL)))

