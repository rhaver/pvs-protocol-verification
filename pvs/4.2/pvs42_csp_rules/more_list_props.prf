(|more_list_props|
 (|add_TCC1| "" (SKOLEM!)
  (("" (EXPAND "append") (("" (LIFT-IF) (("" (ASSERT) NIL NIL)) NIL)) NIL))
  NIL)
 (|add_null| "" (GRIND) NIL NIL) (|add_cons| "" (GRIND) NIL NIL)
 (|length_append| "" (SKOLEM + (_ "l2!1"))
  (("" (INDUCT-AND-SIMPLIFY "l1") NIL NIL)) NIL)
 (|length_add| "" (AUTO-REWRITE "length" "add" "length_append")
  (("" (SKOLEM!) (("" (ASSERT) NIL NIL)) NIL)) NIL)
 (|length_reverse| "" (INDUCT-AND-SIMPLIFY "l" :REWRITES ("length_append"))
  NIL NIL)
 (|length_cdr| "" (AUTO-REWRITE "length")
  (("" (SKOLEM!) (("" (ASSERT) NIL NIL)) NIL)) NIL)
 (|length_zero| "" (GRIND) NIL NIL) (|length_non_zero| "" (GRIND) NIL NIL)
 (|reverse_cons| "" (GRIND) NIL NIL)
 (|reverse_add| "" (GRIND) (("" (REWRITE "reverse_append") NIL NIL)) NIL)
 (|cons_to_add| "" (AUTO-REWRITE "add_null" "add_cons")
  (("" (INDUCT "cons_l")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (GRIND :IF-MATCH NIL)
      (("1" (INST + "a!1" "cons(cons1_var!1, l!1)") (("1" (ASSERT) NIL NIL))
        NIL)
       ("2" (INST + "cons1_var!1" "null")
        (("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|add_induction| "" (SKOSIMP)
  (("" (CASE "FORALL (n : nat), l : length(l) = n IMPLIES P!1(l)")
    (("1" (SKOLEM!) (("1" (INST - "length(l!1)" "l!1") NIL NIL)) NIL)
     ("2" (DELETE 2)
      (("2" (AUTO-REWRITE "length_zero" "length_add")
        (("2" (INDUCT "n")
          (("1" (SKOSIMP) (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (SKOSIMP*)
            (("2" (USE "cons_to_add" ("cons_l" "l!1"))
              (("1" (SKOLEM!)
                (("1" (REPLACE -1)
                  (("1" (INST - "l!2")
                    (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL)
               ("2" (USE "length_non_zero" ("l" "l!1"))
                (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|every_true| "" (INDUCT-AND-SIMPLIFY "l") NIL NIL)
 (|every_implies| "" (INDUCT-AND-SIMPLIFY "l") NIL NIL)
 (|every_implies2| "" (INDUCT-AND-SIMPLIFY "l") NIL NIL)
 (|every_implies3| "" (SKOSIMP) (("" (INDUCT-AND-SIMPLIFY "l") NIL NIL)) NIL)
 (|every_implies4| "" (SKOSIMP)
  (("" (INDUCT "l")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOSIMP)
      (("2" (EXPAND "every" -3)
        (("2" (FLATTEN)
          (("2" (FORWARD-CHAIN "every_implies3")
            (("2" (INST?)
              (("2" (ASSERT)
                (("2" (EXPAND "every" 1)
                  (("2" (SPLIT 1)
                    (("1" (INST? -6)
                      (("1" (ASSERT)
                        (("1" (EXPAND "every" -3 1)
                          (("1" (EXPAND "every" -3)
                            (("1" (FLATTEN)
                              (("1" (INST? -8) (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL))

