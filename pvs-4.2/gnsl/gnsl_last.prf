(|gnsl_last|
 (|p_TCC1| 0
  (|p_TCC1-1| NIL 3399226846 3399305133 ("" (INST 1 "2") NIL NIL) UNCHECKED
   ((|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   2 2 T NIL))
 (|hu_TCC1| 0
  (|hu_TCC1-1| NIL 3399226846 3399305133
   ("" (INST 1 "LAMBDA (k: nat_to_p): k") (("" (SKOSIMP) NIL NIL)) NIL)
   UNCHECKED
   ((/= CONST-DECL "boolean" |notequal| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (<= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   39 37 T NIL))
 (|Nonces_TCC1| 0
  (|Nonces_TCC1-1| NIL 3399226846 3399305134
   ("" (SKOLEM-TYPEPRED)
    (("" (TYPEPRED "pt[[nat_from_2, Identity, Role], Nonce]")
      (("" (DELETE -1)
        (("" (INST -1 "(P!1, i!1, r!1)")
          (("" (SKOLEM!) (("" (INST 1 "n!1") (("" (GRIND) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|pt| CONST-DECL "{p |
         (FORALL i, j, n: i /= j AND p(i)(n) => NOT p(j)(n)) AND
          (FORALL i: EXISTS n: p(i)(n))}"
     |partition| NIL)
    NIL NIL NIL NIL
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   8 8 T NIL))
 (|n_last_TCC1| 0
  (|n_last_TCC1-1| NIL 3399226846 3399305134 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   4 4 T NIL))
 (|n_last_TCC2| 0
  (|n_last_TCC2-1| NIL 3399226846 3399305134 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   4 3 T NIL))
 (|n_prop| 0
  (|n_prop-1| NIL 3399226953 3399305134
   ("" (SKOLEM-TYPEPRED)
    (("" (TYPEPRED "n_last" "pt[[nat_from_2, Identity, Role], Nonce]" "p")
      (("" (DELETE -3)
        (("" (INST -2 "(P!1, u!1, r!1)" "(p, hu(p-1), p-1)" "n_last")
          (("1" (GRIND) NIL NIL)
           ("2" (DELETE -1 -3 -4 -5 2) (("2" (GROUND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|n_last| CONST-DECL "Nonces(p, hu(p - 1), p - 1)" |gnsl_last| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|pt| CONST-DECL "{p |
         (FORALL i, j, n: i /= j AND p(i)(n) => NOT p(j)(n)) AND
          (FORALL i: EXISTS n: p(i)(n))}"
     |partition| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   56 54 T SHOSTAK))
 (|n_orig| 0
  (|n_orig-1| NIL 3399227217 3399305135
   ("" (SKOSIMP)
    (("" (TYPEPRED "pt[[nat_from_2, Identity, Role], Nonce]" "n_last" "p")
      (("" (DELETE -2)
        (("" (INST -1 "(P!1, u!1, r!1)" "(p, hu(p-1), p-1)" "n_last")
          (("1" (GRIND) NIL NIL)
           ("2" (DELETE -1 -3 2) (("2" (GROUND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|pt| CONST-DECL "{p |
         (FORALL i, j, n: i /= j AND p(i)(n) => NOT p(j)(n)) AND
          (FORALL i: EXISTS n: p(i)(n))}"
     |partition| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|n_last| CONST-DECL "Nonces(p, hu(p - 1), p - 1)" |gnsl_last| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   62 60 T SHOSTAK))
 (E_TCC1 0
  (E_TCC1-1 NIL 3399226846 3399305135 ("" (CASES-TCC) NIL NIL) UNCHECKED
   ((|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   49 48 NIL NIL))
 (UROLE_INIT_TCC1 0
  (UROLE_INIT_TCC1-1 NIL 3399226846 3399305135
   ("" (SKOLEM-TYPEPRED)
    (("" (DELETE -2 -3 -4)
      (("" (LEMMA "length_non_zero" ("l" "il!1")) (("" (GROUND) NIL NIL)) NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   5 5 T NIL))
 (UROLE_INIT_TCC2 0
  (UROLE_INIT_TCC2-1 NIL 3399226846 3399305136 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED NIL 3 2 NIL NIL))
 (UROLE_INIT_TCC3 0
  (UROLE_INIT_TCC3-1 NIL 3399226846 3399305136 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED NIL 3 3 NIL NIL))
 (UROLE_LAST_TCC1 0
  (UROLE_LAST_TCC1-1 NIL 3399226846 3399305136 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED NIL 2 3 NIL NIL))
 (UROLE_LAST_TCC2 0
  (UROLE_LAST_TCC2-1 NIL 3399226846 3399305136 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   52 51 NIL NIL))
 (UROLE_LAST_TCC3 0
  (UROLE_LAST_TCC3-1 NIL 3399226846 3399305136
   ("" (SKOLEM!)
    (("" (PROP)
      (("" (CASE "P!1=p")
        (("1" (GROUND) NIL NIL)
         ("2" (DELETE 2)
          (("2" (TYPEPRED "nnP!1")
            (("2" (LEMMA "n_orig" ("P" "P!1" "u" "u!1" "r" "P!1-1"))
              (("2" (GROUND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|n_orig| FORMULA-DECL NIL |gnsl_last| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   8 8 T NIL))
 (UROLE_LAST_TCC4 0
  (UROLE_LAST_TCC4-1 NIL 3399226846 3399305136 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED NIL 3 4 NIL NIL))
 (UROLE_LAST_TCC5 0
  (UROLE_LAST_TCC5-1 NIL 3399226846 3399305137
   ("" (SKOSIMP*)
    (("" (TYPEPRED "il!1" "P!1")
      (("" (DELETE -1 -3 -5)
        (("" (LEMMA "length_non_zero" ("l" "il!1")) (("" (GROUND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   79 78 T NIL))
 (UROLE_LAST_TCC6 0
  (UROLE_LAST_TCC6-1 NIL 3399226846 3399305137 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   14 15 NIL NIL))
 (UROLE_LAST_TCC7 0
  (UROLE_LAST_TCC7-1 NIL 3399226846 3399305138
   ("" (SKOSIMP*)
    (("" (TYPEPRED "i!1")
      (("" (CASE "P!1=p")
        (("1" (DELETE -3 -4) (("1" (GROUND) NIL NIL)) NIL)
         ("2" (DELETE -1 -3 2)
          (("2" (TYPEPRED "nnP!1")
            (("2" (LEMMA "n_orig" ("P" "P!1" "u" "u!1" "r" "P!1-1"))
              (("2" (GROUND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|n_orig| FORMULA-DECL NIL |gnsl_last| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   44 43 T NIL))
 (|LastMessage_TCC1| 0
  (|LastMessage_TCC1-1| NIL 3399226846 3399305138
   ("" (SKOLEM-TYPEPRED) (("" (GROUND) NIL NIL)) NIL) UNCHECKED
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat_from_3| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   2 2 T NIL))
 (|LastMessage_TCC2| 0
  (|LastMessage_TCC2-1| NIL 3399226846 3399305138
   ("" (SKOSIMP)
    (("" (TYPEPRED "il2!1" "P!1")
      (("" (DELETE -1)
        (("" (LEMMA "length_non_zero" ("l" "il2!1")) (("" (GROUND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_3| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL))
   8 7 T NIL))
 (|LastMessage_TCC3| 0
  (|LastMessage_TCC3-1| NIL 3399297313 3399305138
   ("" (SKOSIMP)
    (("" (TYPEPRED "il2!1" "P!1" "i!1")
      (("" (DELETE -1 -4 1)
        (("" (LEMMA "length_non_zero" ("l" "il2!1")) (("" (GROUND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_3| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL))
   8 8 T NIL))
 (UROLE_MIDDLE_TCC1 0
  (UROLE_MIDDLE_TCC1-1 NIL 3399226846 3399305138 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)) 37 36
   NIL NIL))
 (UROLE_MIDDLE_TCC2 0
  (UROLE_MIDDLE_TCC2-1 NIL 3399226846 3399305138
   ("" (SKOLEM!)
    (("" (TYPEPRED "il2!1" "P!1" "i!1")
      (("" (DELETE -1 -4)
        (("" (LEMMA "length_non_zero" ("l" "il2!1")) (("" (GROUND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_3| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL))
   8 8 T NIL))
 (UROLE_MIDDLE_TCC3 0
  (UROLE_MIDDLE_TCC3-1 NIL 3399226846 3399305138 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL))
   5 5 NIL NIL))
 (USER_TCC1 0
  (USER_TCC1-1 NIL 3399226846 3399305139 ("" (SUBTYPE-TCC) NIL NIL) UNCHECKED
   NIL 3 3 T NIL))
 (USER_TCC2 0
  (USER_TCC2-1 NIL 3399297313 3399305139
   ("" (SKOLEM-TYPEPRED)
    (("" (PROP)
      (("" (CASE "3 <= P!1")
        (("1" (DELETE -2 -3 1)
          (("1" (TYPEPRED "pt[[nat_from_2, Identity, Role], Nonce]")
            (("1" (DELETE -1)
              (("1" (INST -1 "(P!1,i!1,1)")
                (("1" (SKOLEM!)
                  (("1" (INST 1 "(1,n!1)")
                    (("1" (EXPAND "IRpart") (("1" (PROPAX) NIL NIL)) NIL)
                     ("2" (DELETE -1) (("2" (GROUND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (DELETE - 2) (("2" (INST 1 "0") NIL NIL)) NIL))
            NIL))
          NIL)
         ("2" (DELETE -1 3) (("2" (GROUND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL) NIL NIL NIL
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|pt| CONST-DECL "{p |
         (FORALL i, j, n: i /= j AND p(i)(n) => NOT p(j)(n)) AND
          (FORALL i: EXISTS n: p(i)(n))}"
     |partition| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   45 43 T NIL))
 (|hu_list_exists_TCC1| 0
  (|hu_list_exists_TCC1-1| NIL 3399226846 3399305139 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   9 9 NIL NIL))
 (|hu_list_exists| 0
  (|hu_list_exists-1| NIL 3399227364 3399305140
   ("" (TYPEPRED "p")
    (("" (INST 1 "gen_f_list(p, 0, hu)")
      (("1" (SPLIT)
        (("1" (REWRITE "gen1") NIL NIL)
         ("2" (SKOLEM!) (("2" (REWRITE "gen2") NIL NIL)) NIL))
        NIL)
       ("2" (GROUND) NIL NIL))
      NIL))
    NIL)
   UNTRIED
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (|gen_f_list| DEF-DECL "list[T]" |listprops| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|gen2| FORMULA-DECL NIL |listprops| NIL)
    (|gen1| FORMULA-DECL NIL |listprops| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   50 48 T SHOSTAK))
 (|hu_list_TCC1| 0
  (|hu_list_TCC1-1| NIL 3399226846 3399305140
   ("" (LEMMA "hu_list_exists") (("" (PROPAX) NIL NIL)) NIL) UNCHECKED
   ((|hu_list_exists| FORMULA-DECL NIL |gnsl_last| NIL)) 1 1 T NIL))
 (|cons_hu_list| 0
  (|cons_hu_list-1| NIL 3399227397 3399305140
   ("" (TYPEPRED "p" "hu_list")
    (("" (DELETE -2 -4)
      (("" (LEMMA "length_non_zero" ("l" "hu_list")) (("" (GROUND) NIL NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|hu_list| CONST-DECL "{x: list[Identity] |
         (length(x) = p) AND (FORALL (i: nat_to_p): nth(x, i) = hu(i))}"
     |gnsl_last| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   4 4 T SHOSTAK))
 (|rho_init_TCC1| 0
  (|rho_init_TCC1-1| NIL 3399284370 3399305140 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED ((<< ADT-DEF-DECL "(well_founded?[Message])" |gnsl_last| NIL)) 9
   10 NIL NIL))
 (|rho_init_TCC2| 0
  (|rho_init_TCC2-1| NIL 3399284370 3399305140 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED ((<< ADT-DEF-DECL "(well_founded?[Message])" |gnsl_last| NIL)) 44
   43 NIL NIL))
 (|rho_init_TCC3| 0
  (|rho_init_TCC3-1| NIL 3399284370 3399305140 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((<< ADT-DEF-DECL "(well_founded?[Message])" |gnsl_last| NIL)
    (|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   9 9 NIL NIL))
 (|rho_init_TCC4| 0
  (|rho_init_TCC4-1| NIL 3399284370 3399305141 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   76 74 NIL NIL))
 (|rho_init_TCC5| 0
  (|rho_init_TCC5-1| NIL 3399284370 3399305141
   ("" (SKOSIMP*)
    (("" (TYPEPRED "hu_list" "p")
      (("" (DELETE -1 -3 -5 -6 1)
        (("" (LEMMA "length_non_zero" ("l" "hu_list")) (("" (GROUND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (|hu_list| CONST-DECL "{x: list[Identity] |
         (length(x) = p) AND (FORALL (i: nat_to_p): nth(x, i) = hu(i))}"
     |gnsl_last| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   7 6 T NIL))
 (|rho_middle_TCC1| 0
  (|rho_middle_TCC1-1| NIL 3399303571 3399305141 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (<< ADT-DEF-DECL "(well_founded?[Message])" |gnsl_last| NIL)
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   12 12 NIL NIL))
 (|rho_middle_TCC2| 0
  (|rho_middle_TCC2-1| NIL 3399303571 3399305142 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED NIL 37 36 NIL NIL))
 (|rho_middle_TCC3| 0
  (|rho_middle_TCC3-1| NIL 3399303571 3399305300
   ("" (SKOSIMP*)
    (("" (TYPEPRED "hu_list" "p")
      (("" (DELETE -1 -3 -5 -6 1)
        (("" (LEMMA "length_non_zero" ("l" "hu_list")) (("" (GROUND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (|hu_list| CONST-DECL "{x: list[Identity] |
         (length(x) = p) AND (FORALL (i: nat_to_p): nth(x, i) = hu(i))}"
     |gnsl_last| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   3863 22 T NIL))
 (|rho_middle_TCC4| 0
  (|rho_middle_TCC4-1| NIL 3399305133 3399305142 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED NIL 5 5 NIL NIL))
 (|rho_middle_TCC5| 0
  (|rho_middle_TCC5-1| NIL 3399305133 3399305143 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   65 59 NIL NIL))
 (|restrictinit_init| 0
  (|restrictinit_init-1| NIL 3399286987 3399305151
   ("" (AUTO-REWRITE-THEORY "sets")
    (("" (AUTO-REWRITE "n_last_TCC2")
      (("" (SKOLEM!)
        (("" (EXPAND "RankUser")
          (("" (INTERLEAVING2)
            (("" (EXPAND "UROLE_INIT")
              (("" (TYPEPRED "P!1")
                (("" (CHOICE3)
                  (("1" (PREFIX)
                    (("1" (DELETE 2 3)
                      (("1" (TYPEPRED "i!1")
                        (("1" (LEMMA "n_prop" ("P" "P!1" "u" "u!1" "r" "0"))
                          (("1"
                            (LEMMA "elt_singleton" ("t1" "i!1" "t2" "n_last"))
                            (("1" (GRIND :IF-MATCH NIL :EXCLUDE "elt") NIL
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (DELETE 2 3)
                      (("2" (PREFIX)
                        (("2" (DELETE 2 3)
                          (("2" (PREFIX)
                            (("1" (DELETE - 2 3)
                              (("1" (EXPAND "rho_init")
                                (("1" (PROPAX) NIL NIL)) NIL))
                              NIL)
                             ("2" (DELETE 3)
                              (("2" (PREFIX)
                                (("1" (DELETE 2 3)
                                  (("1" (EXPAND "R_init")
                                    (("1"
                                      (CASE
                                          "cons(u!1,i!2`2)=hu_list AND nth(i!2`1,P!1-2)=n_last")
                                      (("1" (DELETE -2 -3 1)
                                        (("1" (GROUND) NIL NIL)) NIL)
                                       ("2" (DELETE 3)
                                        (("2" (EXPAND "E")
                                          (("2" (EXPAND "rho_init" -1)
                                            (("2" (SPLIT -1)
                                              (("1" (DELETE 1)
                                                (("1"
                                                  (LEMMA "elt_append2"
                                                   ("l1" "(:i!1:)" "l2" "i!2`1"
                                                    "t" "n_last"))
                                                  (("1"
                                                    (GRIND :IF-MATCH NIL
                                                     :EXCLUDE "elt")
                                                    NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (FLATTEN)
                                                (("2" (SKOLEM!)
                                                  (("2" (DECOMPOSE-EQUALITY -1)
                                                    (("2"
                                                      (DECOMPOSE-EQUALITY -2)
                                                      (("2"
                                                        (DECOMPOSE-EQUALITY -1)
                                                        (("2"
                                                          (DECOMPOSE-EQUALITY
                                                           -2)
                                                          (("2"
                                                            (TYPEPRED "nl!1"
                                                             "i!2`1" "i!2`2"
                                                             "hu_list")
                                                            (("2"
                                                              (DELETE -1
                                                                      -3
                                                                      -5
                                                                      -7
                                                                      2)
                                                              (("2"
                                                                (CASE "P!1=p")
                                                                (("1" (SPLIT)
                                                                  (("1"
                                                                    (REPLACE -7
                                                                             1)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -9
                                                                       1)
                                                                      (("1"
                                                                        (INST
                                                                         -6
                                                                         "0")
                                                                        (("1"
                                                                          (REPLACE
                                                                           -6
                                                                           1
                                                                           RL)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "nth"
                                                                             1)
                                                                            (("1"
                                                                              (REWRITE
                                                                               "list_cons_eta"
                                                                               1)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (LEMMA
                                                                     "equality_nth"
                                                                     ("l1"
                                                                      "cons(i!1,i!2`1)"
                                                                      "l2"
                                                                      "append(nl!1,(:n_last:))"))
                                                                    (("2"
                                                                      (PROP)
                                                                      (("2"
                                                                        (INST
                                                                         -1
                                                                         "P!1-1")
                                                                        (("1"
                                                                          (EXPAND
                                                                           "nth"
                                                                           -1
                                                                           1)
                                                                          (("1"
                                                                            (REPLACE
                                                                             -1
                                                                             1)
                                                                            (("1"
                                                                              (REWRITE
                                                                               "nth_append"
                                                                               1)
                                                                              (("1"
                                                                                (REPLACE*
                                                                                 -2
                                                                                 -3)
                                                                                (("1"
                                                                                  (DELETE
                                                                                   -)
                                                                                  (("1"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (DELETE
                                                                                 -1
                                                                                 -4
                                                                                 -5
                                                                                 -6
                                                                                 -7
                                                                                 -8
                                                                                 -9
                                                                                 -10
                                                                                 -11
                                                                                 2)
                                                                                (("2"
                                                                                  (GRIND)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (EXPAND
                                                                           "length"
                                                                           1)
                                                                          (("2"
                                                                            (DELETE
                                                                             -1
                                                                             -2
                                                                             -4
                                                                             -5
                                                                             -6
                                                                             -7
                                                                             -8
                                                                             -9
                                                                             -10
                                                                             2)
                                                                            (("2"
                                                                              (GROUND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (REPLACE -6
                                                                           -3)
                                                                  (("2"
                                                                    (REWRITE
                                                                     "length_cdr"
                                                                     -3)
                                                                    (("2"
                                                                      (DELETE
                                                                       -1
                                                                       -2
                                                                       -5
                                                                       -6
                                                                       -7
                                                                       -8
                                                                       -9
                                                                       2)
                                                                      (("2"
                                                                        (GROUND)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (DELETE - 2 3 4) (("2" (STOP) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "i!2`1")
                    (("2" (DELETE -1 2)
                      (("2" (LEMMA "length_non_zero" ("l" "i!2`1"))
                        (("2" (GROUND) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("3" (TYPEPRED "i!2`2")
                    (("3" (DELETE -1 2)
                      (("3" (LEMMA "length_non_zero" ("l" "i!2`2"))
                        (("3" (GROUND) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("4" (TYPEPRED "i!2`2")
                    (("4" (DELETE -1 2)
                      (("4" (LEMMA "length_non_zero" ("l" "i!2`2"))
                        (("4" (GROUND) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("5" (SKOLEM!)
                    (("5" (TYPEPRED "il!1")
                      (("5" (DELETE -1 2)
                        (("5" (LEMMA "length_non_zero" ("l" "il!1"))
                          (("5" (GROUND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|RankUser| CONST-DECL "setof[trace[event]]" |dynetwork| NIL)
    (|uniform3_choice2| FORMULA-DECL NIL |uniform_props2| "../rules/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|restriction_choice3| FORMULA-DECL NIL |restriction_rules2| "../rules/")
    (>> CONST-DECL "process" |processes| "../rules/")
    (|trans?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|trans| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (trans?)]" |dynetwork| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (E CONST-DECL "Message" |gnsl_last| NIL)
    (|public| ADT-CONSTRUCTOR-DECL "[Identity -> (public?)]" |gnsl_last| NIL)
    (|conc?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|conc| ADT-CONSTRUCTOR-DECL "[[Message, Message] -> (conc?)]" |gnsl_last|
     NIL)
    (|nlist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|nlist| ADT-CONSTRUCTOR-DECL "[list[Nonce] -> (nlist?)]" |gnsl_last| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|ilist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|ilist| ADT-CONSTRUCTOR-DECL "[list[Identity] -> (ilist?)]" |gnsl_last|
     NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|rec| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (rec?)]" |dynetwork| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|signal?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|signal| ADT-CONSTRUCTOR-DECL "[M -> (signal?)]" |dynetwork| NIL)
    (|running?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|running| ADT-CONSTRUCTOR-DECL
     "[[Role, list[Identity], Nonce] -> (running?)]" |gnsl_last| NIL)
    (|Stop| CONST-DECL "process" |processes| "../rules/")
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|restriction_stop| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|hu_list| CONST-DECL "{x: list[Identity] |
         (length(x) = p) AND (FORALL (i: nat_to_p): nth(x, i) = hu(i))}"
     |gnsl_last| NIL)
    (|elt_append2| FORMULA-DECL NIL |listprops| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|x_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (|y_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|n_last_TCC2| SUBTYPE-TCC NIL |gnsl_last| NIL)
    (|x_ilist| ADT-ACCESSOR-DECL "[(ilist?) -> list[Identity]]" |gnsl_last|
     NIL)
    (|length_cdr| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|list_cons_eta| FORMULA-DECL NIL |list_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|nth_append| FORMULA-DECL NIL |listprops| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    NIL NIL NIL NIL (|equality_nth| FORMULA-DECL NIL |listprops| NIL)
    (|x_nlist| ADT-ACCESSOR-DECL "[(nlist?) -> list[Nonce]]" |gnsl_last| NIL)
    (|x_public| ADT-ACCESSOR-DECL "[(public?) -> Identity]" |gnsl_last| NIL)
    (|n_prop| FORMULA-DECL NIL |gnsl_last| NIL)
    (|n_last| CONST-DECL "Nonces(p, hu(p - 1), p - 1)" |gnsl_last| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|elt_singleton| FORMULA-DECL NIL |listprops| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|restriction_pref| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|uniform_stop2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|uniform_prefix2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|event| TYPE-DECL NIL |dynetwork| NIL)
    (|\|-| CONST-DECL "bool" |gnsl_last| NIL)
    (INIT CONST-DECL "bool" |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (UROLE_INIT CONST-DECL "process[event]" |gnsl_last| NIL)
    (|process| TYPE-EQ-DECL NIL |processes| "../rules/")
    (|prefix_closed| CONST-DECL "bool" |processes| "../rules/")
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../rules/")
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|R_init| CONST-DECL "set[event]" |gnsl_last| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|restriction_free_par2| FORMULA-DECL NIL |restriction_rules3| "../rules/")
    (|complement| CONST-DECL "set" |sets| NIL)
    (|msg| SHARED-ADT-ACCESSOR-DECL "[event -> M]" |dynetwork| NIL)
    (|rho_init| DEF-DECL "bool" |gnsl_last| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|#| CONST-DECL "process[T]" |restriction_rules| "../rules/")
    (|uniform2_interleave2| FORMULA-DECL NIL |uniform_props3| "../rules/")
    (|member| CONST-DECL "bool" |sets| NIL))
   763 731 T NIL))
 (|restrictinit_middle| 0
  (|restrictinit_middle-1| NIL 3399302272 3399305161
   ("" (AUTO-REWRITE-THEORY "sets")
    (("" (AUTO-REWRITE "n_last_TCC2" "USER_TCC2")
      (("" (SKOLEM!)
        (("" (EXPAND "RankUser")
          (("" (PROP)
            (("" (INTERLEAVING2)
              (("" (TYPEPRED "P!1" "i!1`1")
                (("" (EXPAND "UROLE_MIDDLE")
                  (("" (CHOICE3)
                    (("1" (PREFIX)
                      (("1" (DELETE 2 3)
                        (("1" (PREFIX)
                          (("1" (DELETE 2 3)
                            (("1" (EXPAND "E")
                              (("1" (EXPAND "rho_init" -1)
                                (("1" (SPLIT)
                                  (("1" (TYPEPRED "i!1`2")
                                    (("1"
                                      (LEMMA "n_prop"
                                       ("P" "P!1" "u" "u!1" "r" "i!1`1"))
                                      (("1"
                                        (LEMMA "elt_append3"
                                         ("l1" "i!2`1" "l2" "(:i!1`2:)" "t"
                                          "n_last"))
                                        (("1"
                                          (LEMMA "elt_singleton"
                                           ("t1" "i!1`2" "t2" "n_last"))
                                          (("1"
                                            (GRIND :IF-MATCH NIL :EXCLUDE
                                             "elt")
                                            NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (COMMENT "contradiction in -1")
                                    (("2" (SKOSIMP*)
                                      (("2" (DECOMPOSE-EQUALITY -2)
                                        (("2" (DECOMPOSE-EQUALITY -1)
                                          (("2" (DECOMPOSE-EQUALITY -2)
                                            (("2"
                                              (TYPEPRED "i!2`1" "i!2`3" "i!2`4"
                                               "nl!1" "hu_list")
                                              (("2"
                                                (DELETE -1 -3 -5 -7 -9 -14 +)
                                                (("2" (CASE "P!1=p")
                                                  (("1" (REPLACE -9 -2)
                                                    (("1"
                                                      (REWRITE "length_append"
                                                       -2)
                                                      (("1"
                                                        (DELETE -3
                                                                -4
                                                                -6
                                                                -7
                                                                -8
                                                                -9
                                                                -10
                                                                -11)
                                                        (("1" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2"
                                                    (LEMMA "equality_length"
                                                     ("l1"
                                                      "append(i!2`3,i!2`4)"
                                                      "l2" "cdr(hu_list)"))
                                                    (("2" (PROP)
                                                      (("2"
                                                        (REWRITE
                                                         "length_append" -1)
                                                        (("2"
                                                          (REWRITE "length_cdr"
                                                           -1)
                                                          (("2"
                                                            (DELETE -2
                                                                    -5
                                                                    -7
                                                                    -8
                                                                    -9
                                                                    -10
                                                                    -11
                                                                    -12)
                                                            (("2" (GROUND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      ";;; contradiction in -1"))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (DELETE 2 3)
                            (("2" (PREFIX)
                              (("2" (DELETE 2 3)
                                (("2" (PREFIX)
                                  (("1" (DELETE - 2 3 4)
                                    (("1" (EXPAND "rho_init")
                                      (("1" (PROPAX) NIL NIL)) NIL))
                                    NIL)
                                   ("2" (DELETE -2 2 3)
                                    (("2" (EXPAND "E")
                                      (("2" (EXPAND "rho_init" -1)
                                        (("2" (SPLIT)
                                          (("1" (EXPAND "LastMessage")
                                            (("1" (LIFT-IF)
                                              (("1" (PROP)
                                                (("1" (PREFIX)
                                                  (("1" (DELETE 2 3)
                                                    (("1"
                                                      (LEMMA "elt_append2"
                                                       ("l1" "(:i!1`2:)" "l2"
                                                        "i!2`2" "t" "n_last"))
                                                      (("1"
                                                        (GRIND :IF-MATCH NIL
                                                         :EXCLUDE "elt")
                                                        NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (DELETE - 2 3 4)
                                                    (("2" (STOP) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (PREFIX)
                                                  (("1" (DELETE 2 3)
                                                    (("1"
                                                      (LEMMA "elt_append2"
                                                       ("l1" "(:i!1`2:)" "l2"
                                                        "i!2`2" "t" "n_last"))
                                                      (("1"
                                                        (GRIND :IF-MATCH NIL
                                                         :EXCLUDE "elt")
                                                        NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (DELETE - 2 3 4 5)
                                                    (("2" (STOP) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (COMMENT "contradiction in -1")
                                            (("2" (FLATTEN)
                                              (("2" (SKOLEM!)
                                                (("2" (DELETE -1 -3 -4 -5 +)
                                                  (("2" (DECOMPOSE-EQUALITY -1)
                                                    NIL NIL))
                                                  NIL))
                                                NIL))
                                              ";;; contradiction in -1"))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (TYPEPRED "i!2`2")
                      (("2" (DELETE -1 -3 -4 -5 2 3) (("2" (GROUND) NIL NIL))
                        NIL))
                      NIL)
                     ("3" (TYPEPRED "i!2`4")
                      (("3" (DELETE -1 -4 2 3)
                        (("3" (LEMMA "length_non_zero" ("l" "i!2`4"))
                          (("3" (GROUND) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("4" (TYPEPRED "i!2`3")
                      (("4" (DELETE -1 -3 -4 -5 2 3) (("4" (GROUND) NIL NIL))
                        NIL))
                      NIL)
                     ("5" (SKOLEM!)
                      (("5" (TYPEPRED "il2!1")
                        (("5" (DELETE -1 -4 2 3)
                          (("5" (LEMMA "length_non_zero" ("l" "il2!1"))
                            (("5" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|RankUser| CONST-DECL "setof[trace[event]]" |dynetwork| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|uniform2_interleave2| FORMULA-DECL NIL |uniform_props3| "../rules/")
    (|#| CONST-DECL "process[T]" |restriction_rules| "../rules/")
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|rho_init| DEF-DECL "bool" |gnsl_last| NIL)
    (|msg| SHARED-ADT-ACCESSOR-DECL "[event -> M]" |dynetwork| NIL)
    (USER_TCC2 EXISTENCE-TCC NIL |gnsl_last| NIL)
    (|complement| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|restriction_free_par2| FORMULA-DECL NIL |restriction_rules3| "../rules/")
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|R_init| CONST-DECL "set[event]" |gnsl_last| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../rules/")
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|prefix_closed| CONST-DECL "bool" |processes| "../rules/")
    (|process| TYPE-EQ-DECL NIL |processes| "../rules/")
    (|nat_from_3| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (UROLE_MIDDLE CONST-DECL "process[event]" |gnsl_last| NIL)
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (INIT CONST-DECL "bool" |gnsl_last| NIL)
    (|\|-| CONST-DECL "bool" |gnsl_last| NIL)
    (|event| TYPE-DECL NIL |dynetwork| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|uniform_prefix2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|uniform_stop2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|restriction_pref| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|n_prop| FORMULA-DECL NIL |gnsl_last| NIL)
    (|elt_singleton| FORMULA-DECL NIL |listprops| NIL)
    (|n_last| CONST-DECL "Nonces(p, hu(p - 1), p - 1)" |gnsl_last| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|elt_append3| FORMULA-DECL NIL |listprops| NIL)
    (|x_nlist| ADT-ACCESSOR-DECL "[(nlist?) -> list[Nonce]]" |gnsl_last| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|length_append| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|length_cdr| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|equality_length| FORMULA-DECL NIL |listprops| NIL)
    (|x_ilist| ADT-ACCESSOR-DECL "[(ilist?) -> list[Identity]]" |gnsl_last|
     NIL)
    (|n_last_TCC2| SUBTYPE-TCC NIL |gnsl_last| NIL)
    (|y_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (|hu_list| CONST-DECL "{x: list[Identity] |
         (length(x) = p) AND (FORALL (i: nat_to_p): nth(x, i) = hu(i))}"
     |gnsl_last| NIL)
    (|x_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (|elt_append2| FORMULA-DECL NIL |listprops| NIL)
    (|restriction_stop| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Stop| CONST-DECL "process" |processes| "../rules/")
    (|LastMessage| CONST-DECL "event" |gnsl_last| NIL)
    (|running| ADT-CONSTRUCTOR-DECL
     "[[Role, list[Identity], Nonce] -> (running?)]" |gnsl_last| NIL)
    (|running?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|signal| ADT-CONSTRUCTOR-DECL "[M -> (signal?)]" |dynetwork| NIL)
    (|signal?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|trans| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (trans?)]" |dynetwork| NIL)
    (|trans?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|ilist| ADT-CONSTRUCTOR-DECL "[list[Identity] -> (ilist?)]" |gnsl_last|
     NIL)
    (|ilist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|nlist| ADT-CONSTRUCTOR-DECL "[list[Nonce] -> (nlist?)]" |gnsl_last| NIL)
    (|nlist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|conc| ADT-CONSTRUCTOR-DECL "[[Message, Message] -> (conc?)]" |gnsl_last|
     NIL)
    (|conc?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public| ADT-CONSTRUCTOR-DECL "[Identity -> (public?)]" |gnsl_last| NIL)
    (E CONST-DECL "Message" |gnsl_last| NIL)
    (|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|rec| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (rec?)]" |dynetwork| NIL)
    (>> CONST-DECL "process" |processes| "../rules/")
    (|restriction_choice3| FORMULA-DECL NIL |restriction_rules2| "../rules/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|uniform3_choice2| FORMULA-DECL NIL |uniform_props2| "../rules/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   1058 1013 NIL NIL))
 (|restrictinit_last| 0
  (|restrictinit_last-1| NIL 3399294355 3399305177
   ("" (AUTO-REWRITE-THEORY "sets")
    (("" (AUTO-REWRITE "n_last_TCC2")
      (("" (SKOLEM!)
        (("" (EXPAND "RankUser")
          (("" (INTERLEAVING2)
            (("" (EXPAND "UROLE_LAST")
              (("" (LIFT-IF)
                (("" (TYPEPRED "P!1")
                  (("" (PROP)
                    (("1" (CHOICE3)
                      (("1" (CASE "P!1=p AND u!1=hu(p-1)")
                        (("1" (FLATTEN)
                          (("1" (REPLACE* -1 -2 -3)
                            (("1" (PREFIX)
                              (("1" (DELETE 2 3)
                                (("1" (PREFIX)
                                  (("1" (DELETE -1 2 3)
                                    (("1" (EXPAND "E")
                                      (("1" (EXPAND "rho_init")
                                        (("1" (FLATTEN)
                                          (("1"
                                            (TYPEPRED "i!2`1" "i!2`2"
                                             "hu_list")
                                            (("1" (DELETE -1 -3 -6 -10 -11 1)
                                              (("1" (SPLIT)
                                                (("1" (DECOMPOSE-EQUALITY 1)
                                                  (("1" (INST -3 "0")
                                                    (("1" (EXPAND "nth" -3)
                                                      (("1" (PROPAX) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (INST 1 "i!2`1")
                                                  (("2" (DECOMPOSE-EQUALITY 1)
                                                    (("2"
                                                      (DECOMPOSE-EQUALITY 1)
                                                      (("2"
                                                        (CASE
                                                            "length(append(cdr(i!2`2),(:hu(p-1):)))=p-1")
                                                        (("1"
                                                          (REWRITE
                                                           "length_nth_equality[Identity]")
                                                          (("1"
                                                            (REWRITE
                                                             "length_cdr" 1)
                                                            (("1"
                                                              (DELETE -2
                                                                      -3
                                                                      -4
                                                                      -6
                                                                      -7
                                                                      -8
                                                                      2)
                                                              (("1" (GROUND)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (SKOLEM-TYPEPRED)
                                                            (("2"
                                                              (LEMMA
                                                               "nth_append"
                                                               ("l1"
                                                                "cdr(i!2`2)"
                                                                "l2"
                                                                "(:hu(p-1):)"
                                                                "i" "i!3"))
                                                              (("1"
                                                                (REPLACE -1 1)
                                                                (("1"
                                                                  (DELETE -1 2)
                                                                  (("1"
                                                                    (REWRITE
                                                                     "length_cdr"
                                                                     1)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "nth_cdr"
                                                                       ("c"
                                                                        "hu_list"
                                                                        "i"
                                                                        "i!3"))
                                                                      (("1"
                                                                        (REPLACE
                                                                         -1
                                                                         1)
                                                                        (("1"
                                                                          (DELETE
                                                                           -1)
                                                                          (("1"
                                                                            (INST
                                                                             -7
                                                                             "i!3+1")
                                                                            (("1"
                                                                              (CASE
                                                                                  "i!3<p-2 OR i!3=p-2")
                                                                              (("1"
                                                                                (GRIND
                                                                                 :EXCLUDE
                                                                                 "nth")
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "nth"
                                                                                   -6)
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (EXPAND
                                                                                   "nth"
                                                                                   1)
                                                                                  (("2"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (DELETE
                                                                                 -3
                                                                                 -4
                                                                                 -5
                                                                                 -6
                                                                                 -7
                                                                                 -8
                                                                                 -9
                                                                                 2)
                                                                                (("2"
                                                                                  (GROUND)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (DELETE -2
                                                                        -3
                                                                        -4
                                                                        -5
                                                                        -6
                                                                        -7
                                                                        -8
                                                                        -9
                                                                        2
                                                                        3)
                                                                (("2"
                                                                  (REWRITE
                                                                   "length_append"
                                                                   -1)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (REWRITE
                                                           "length_append" 1)
                                                          (("2"
                                                            (REWRITE
                                                             "length_cdr" 1)
                                                            (("2"
                                                              (DELETE -1
                                                                      -3
                                                                      -4
                                                                      -5
                                                                      -7
                                                                      2)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (DELETE 2 3)
                                    (("2" (PREFIX)
                                      (("2" (DELETE -2 -3 -4 -5 -6 +)
                                        (("2" (GRIND :IF-MATCH NIL)
                                          (("2" (INST 1 "0")
                                            (("2" (EXPAND "nth")
                                              (("2" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (TYPEPRED "i!1")
                          (("2"
                            (LEMMA "n_orig" ("P" "P!1" "u" "u!1" "r" "P!1-1"))
                            (("2" (DELETE -4 2) (("2" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "i!2`2")
                        (("2" (DELETE -1 -3 -4 2)
                          (("2" (LEMMA "length_non_zero" ("l" "i!2`2"))
                            (("2" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("3" (TYPEPRED "i!2`2")
                        (("3" (DELETE -1 -3 -4 -5 2) (("3" (GROUND) NIL NIL))
                          NIL))
                        NIL)
                       ("4" (PROP)
                        (("4" (SKOLEM-TYPEPRED)
                          (("4" (DELETE -2 2)
                            (("4" (TYPEPRED "i!1")
                              (("4"
                                (LEMMA "n_orig"
                                 ("P" "P!1" "u" "u!1" "r" "P!1-1"))
                                (("4" (GROUND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("5" (PROP)
                        (("5" (SKOLEM-TYPEPRED)
                          (("5" (DELETE -3 -4 2) (("5" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("6" (SKOLEM!)
                        (("6" (TYPEPRED "il!1")
                          (("6" (DELETE -1 -3 -4 2)
                            (("6" (LEMMA "length_non_zero" ("l" "il!1"))
                              (("6" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("7" (SKOSIMP*)
                        (("7" (TYPEPRED "i!1" "i!2")
                          (("7" (DELETE -3 -5 2)
                            (("7"
                              (LEMMA "n_orig"
                               ("P" "P!1" "u" "u!1" "r" "P!1-1"))
                              (("7" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("8" (SKOSIMP*)
                        (("8" (TYPEPRED "i!2")
                          (("8" (DELETE -3 -4 2) (("8" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (CHOICE3)
                      (("1" (PREFIX)
                        (("1" (DELETE 2 3)
                          (("1" (PREFIX)
                            (("1" (DELETE 2 3)
                              (("1" (EXPAND "E")
                                (("1" (EXPAND "rho_init" -1)
                                  (("1" (SPLIT)
                                    (("1"
                                      (LEMMA "elt_append3"
                                       ("l1" "i!2`1" "l2" "(:i!1:)" "t"
                                        "n_last"))
                                      (("1"
                                        (LEMMA "elt_singleton"
                                         ("t1" "i!1" "t2" "n_last"))
                                        (("1" (GRIND :EXCLUDE "elt") NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (SKOSIMP*)
                                      (("2" (DECOMPOSE-EQUALITY -1)
                                        (("2" (DECOMPOSE-EQUALITY -2)
                                          (("2" (DECOMPOSE-EQUALITY -1)
                                            (("2" (DECOMPOSE-EQUALITY -2)
                                              (("2"
                                                (TYPEPRED "nl!1" "i!2`1"
                                                 "i!2`2" "hu_list")
                                                (("2" (DELETE -1 -3 -5 -7 +)
                                                  (("2" (CASE "P!1=p")
                                                    (("1" (REPLACE -8 -3)
                                                      (("1"
                                                        (REWRITE
                                                         "length_append" -3)
                                                        (("1" (REPLACE -2 -3)
                                                          (("1"
                                                            (DELETE -2
                                                                    -4
                                                                    -5
                                                                    -6
                                                                    -7
                                                                    -8
                                                                    -9
                                                                    -10)
                                                            (("1" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (REPLACE -6 -3)
                                                      (("2"
                                                        (REWRITE "length_cdr"
                                                         -3)
                                                        (("2"
                                                          (DELETE -1
                                                                  -2
                                                                  -5
                                                                  -6
                                                                  -7
                                                                  -8
                                                                  -9)
                                                          (("2" (GROUND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (DELETE 2 3)
                              (("2" (PREFIX)
                                (("2" (DELETE 2 3)
                                  (("2" (PREFIX)
                                    (("1" (DELETE - 2 3)
                                      (("1" (GRIND) NIL NIL)) NIL)
                                     ("2" (DELETE - 2 3 4)
                                      (("2" (STOP) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "i!2`2")
                        (("2" (DELETE -1 2 3)
                          (("2" (LEMMA "length_non_zero" ("l" "i!2`2"))
                            (("2" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("3" (TYPEPRED "i!2`2")
                        (("3" (DELETE -1 -3 2 3) (("3" (GROUND) NIL NIL)) NIL))
                        NIL)
                       ("4" (SKOLEM!)
                        (("4" (TYPEPRED "il!1")
                          (("4" (DELETE -1 2 3)
                            (("4" (LEMMA "length_non_zero" ("l" "il!1"))
                              (("4" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|RankUser| CONST-DECL "setof[trace[event]]" |dynetwork| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|restriction_stop| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|x_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (|y_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (|x_ilist| ADT-ACCESSOR-DECL "[(ilist?) -> list[Identity]]" |gnsl_last|
     NIL)
    (|x_nlist| ADT-ACCESSOR-DECL "[(nlist?) -> list[Nonce]]" |gnsl_last| NIL)
    (|x_public| ADT-ACCESSOR-DECL "[(public?) -> Identity]" |gnsl_last| NIL)
    (|elt_append3| FORMULA-DECL NIL |listprops| NIL)
    (|elt_singleton| FORMULA-DECL NIL |listprops| NIL)
    (|uniform3_choice2| FORMULA-DECL NIL |uniform_props2| "../rules/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|restriction_choice3| FORMULA-DECL NIL |restriction_rules2| "../rules/")
    (>> CONST-DECL "process" |processes| "../rules/")
    (|rec| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (rec?)]" |dynetwork| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (E CONST-DECL "Message" |gnsl_last| NIL)
    (|public| ADT-CONSTRUCTOR-DECL "[Identity -> (public?)]" |gnsl_last| NIL)
    (|conc?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|conc| ADT-CONSTRUCTOR-DECL "[[Message, Message] -> (conc?)]" |gnsl_last|
     NIL)
    (|nlist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|nlist| ADT-CONSTRUCTOR-DECL "[list[Nonce] -> (nlist?)]" |gnsl_last| NIL)
    (|ilist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|ilist| ADT-CONSTRUCTOR-DECL "[list[Identity] -> (ilist?)]" |gnsl_last|
     NIL)
    (|trans?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|trans| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (trans?)]" |dynetwork| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|signal?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|signal| ADT-CONSTRUCTOR-DECL "[M -> (signal?)]" |dynetwork| NIL)
    (|commit?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|commit| ADT-CONSTRUCTOR-DECL
     "[[Role, list[Identity], Nonce] -> (commit?)]" |gnsl_last| NIL)
    (|Stop| CONST-DECL "process" |processes| "../rules/")
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (|n_orig| FORMULA-DECL NIL |gnsl_last| NIL)
    (|uniform_prefix2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|uniform_stop2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|restriction_pref| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|n_last| CONST-DECL "Nonces(p, hu(p - 1), p - 1)" |gnsl_last| NIL)
    (|n_last_TCC2| SUBTYPE-TCC NIL |gnsl_last| NIL)
    (|Message_ilist_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|length_nth_equality| FORMULA-DECL NIL |listprops| NIL)
    (|length_cdr| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|nth_append| FORMULA-DECL NIL |listprops| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nth_cdr| FORMULA-DECL NIL |listprops| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|length_append| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|Message_conc_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|Message_public_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|hu_list| CONST-DECL "{x: list[Identity] |
         (length(x) = p) AND (FORALL (i: nat_to_p): nth(x, i) = hu(i))}"
     |gnsl_last| NIL)
    (|elt| CONST-DECL "bool" |listprops| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|event| TYPE-DECL NIL |dynetwork| NIL)
    (|\|-| CONST-DECL "bool" |gnsl_last| NIL)
    (INIT CONST-DECL "bool" |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (UROLE_LAST CONST-DECL "process[event]" |gnsl_last| NIL)
    (|process| TYPE-EQ-DECL NIL |processes| "../rules/")
    (|prefix_closed| CONST-DECL "bool" |processes| "../rules/")
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../rules/")
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|R_init| CONST-DECL "set[event]" |gnsl_last| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|restriction_free_par2| FORMULA-DECL NIL |restriction_rules3| "../rules/")
    (|complement| CONST-DECL "set" |sets| NIL)
    (|msg| SHARED-ADT-ACCESSOR-DECL "[event -> M]" |dynetwork| NIL)
    (|rho_init| DEF-DECL "bool" |gnsl_last| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|#| CONST-DECL "process[T]" |restriction_rules| "../rules/")
    (|uniform2_interleave2| FORMULA-DECL NIL |uniform_props3| "../rules/")
    (|member| CONST-DECL "bool" |sets| NIL))
   1579 1529 T NIL))
 (|authentication_init| 0
  (|authentication_init-1| NIL 3399297822 3399305189
   ("" (AUTO-REWRITE-THEORY "sets")
    (("" (REWRITE "authentication_by_rank" + ("rho" "rho_init"))
      (("1" (DELETE 2)
        (("1" (COMMENT "intruder's initial knowledge is in rho")
          (("1" (SKOLEM!)
            (("1" (PROP)
              (("1" (EXPAND "INIT")
                (("1" (EXPAND "rho_init") (("1" (SMASH) NIL NIL)) NIL)) NIL))
              NIL))
            ";;; intruder's initial knowledge is in rho"))
          NIL))
        NIL)
       ("2" (DELETE 2)
        (("2"
          (COMMENT
           "from of a set of messages in rho, no message not in rho can be generated")
          (("2" (EXPAND "|-")
            (("2" (RULE-INDUCT "Gen")
              (("2" (SKOLEM!)
                (("2" (SMASH)
                  (("1" (INST -2 "m!2") (("1" (PROP) NIL NIL)) NIL)
                   ("2" (DELETE -2)
                    (("2" (SKOLEM!)
                      (("2" (PROP)
                        (("2" (REPLACE -3 1)
                          (("2" (EXPAND "rho_init" 1) (("2" (PROP) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (DELETE -2)
                    (("3" (SKOLEM!)
                      (("3" (EXPAND "rho_init" -1) (("3" (PROPAX) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("4" (DELETE -2)
                    (("4" (SKOLEM!)
                      (("4" (EXPAND "rho_init" -1) (("4" (PROPAX) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("5" (DELETE -2)
                    (("5" (SKOLEM!)
                      (("5" (FLATTEN)
                        (("5" (EXPAND "rho_init" -1)
                          (("5" (REPLACE -2 1)
                            (("5" (EXPAND "rho_init")
                              (("5" (DELETE -2) (("5" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("6" (DELETE -2)
                    (("6" (SKOLEM!)
                      (("6" (PROP)
                        (("6" (REPLACE -2 1)
                          (("6" (DELETE -2)
                            (("6" (EXPAND "rho_init")
                              (("6" (EXPAND "elt")
                                (("6" (INST 1 "0")
                                  (("1" (GRIND :EXCLUDE 2) NIL NIL)
                                   ("2" (DELETE 2) (("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("7" (DELETE -2)
                    (("7" (SKOLEM!)
                      (("7" (PROP)
                        (("7" (REPLACE -3 1)
                          (("7" (DELETE -3)
                            (("7" (EXPAND "rho_init")
                              (("7"
                                (LEMMA "elt_append3"
                                 ("l1" "nl1!1" "l2" "nl2!1" "t" "n_last"))
                                (("7" (PROP) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("8" (DELETE -2)
                    (("8" (SKOLEM!)
                      (("8" (PROP)
                        (("8" (REPLACE -3 1)
                          (("8" (DELETE -3)
                            (("8" (REPLACE -2 -1)
                              (("8" (DELETE -2)
                                (("8" (EXPAND "rho_init")
                                  (("8"
                                    (LEMMA "elt_append1"
                                     ("l1" "nl1!1" "l2" "nl2!1" "t" "n_last"))
                                    (("8" (PROP) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("9" (DELETE -2)
                    (("9" (SKOLEM!)
                      (("9" (PROP)
                        (("9" (REPLACE -3 1)
                          (("9" (DELETE -3)
                            (("9" (REPLACE -2 -1)
                              (("9" (DELETE -2)
                                (("9" (EXPAND "rho_init")
                                  (("9"
                                    (LEMMA "elt_append2"
                                     ("l1" "nl1!1" "l2" "nl2!1" "t" "n_last"))
                                    (("9" (PROP) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("10" (DELETE -2)
                    (("10" (SKOLEM!)
                      (("10" (PROP)
                        (("10" (REPLACE -2 1)
                          (("10" (DELETE -1 -2)
                            (("10" (EXPAND "rho_init")
                              (("10" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("11" (DELETE -2)
                    (("11" (SKOLEM!)
                      (("11" (PROP)
                        (("11" (REPLACE -2 1)
                          (("11" (DELETE -1 -2)
                            (("11" (EXPAND "rho_init")
                              (("11" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("12" (DELETE -2)
                    (("12" (SKOLEM!)
                      (("12" (PROP)
                        (("12" (REPLACE -3 1)
                          (("12" (DELETE -1 -2 -3)
                            (("12" (EXPAND "rho_init")
                              (("12" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("13" (DELETE -2)
                    (("13" (SKOLEM!)
                      (("13" (PROP)
                        (("13" (REPLACE -3 1)
                          (("13" (DELETE -1 -2 -3)
                            (("13" (EXPAND "rho_init")
                              (("13" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("14" (DELETE -2)
                    (("14" (SKOLEM!)
                      (("14" (PROP)
                        (("14" (REPLACE -3 1)
                          (("14" (DELETE -1 -2 -3)
                            (("14" (EXPAND "rho_init")
                              (("14" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("15" (DELETE -2)
                    (("15" (SKOLEM!)
                      (("15" (PROP)
                        (("15" (REPLACE -3 1)
                          (("15" (DELETE -3)
                            (("15" (TYPEPRED "k!1")
                              (("15" (SPLIT)
                                (("1" (GRIND) NIL NIL)
                                 ("2" (EXPAND "rho_init" -3)
                                  (("2" (ASSERT) (("2" (LAZY-GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            ";;; from of a set of messages in rho, no message not in rho can be generated"))
          NIL))
        NIL)
       ("3" (DELETE 2)
        (("3" (COMMENT "users maintain the rank function")
          (("3" (SKOLEM!)
            (("3" (EXPAND "USER")
              (("3" (EXPAND "RankUser")
                (("3" (INTERLEAVING2)
                  (("1" (INTERLEAVING)
                    (("1" (INTERLEAVING)
                      (("1" (LEMMA "restrictinit_init" ("P" "i!2" "u" "i!1"))
                        (("1" (GRIND :EXCLUDE ("rho_init" "UROLE_INIT")) NIL
                          NIL))
                        NIL)
                       ("2" (LEMMA "restrictinit_last" ("P" "i!2" "u" "i!1"))
                        (("2" (GRIND :EXCLUDE ("rho_init" "UROLE_LAST")) NIL
                          NIL))
                        NIL))
                      NIL)
                     ("2" (LIFT-IF)
                      (("2" (PROP)
                        (("1" (STOP) NIL NIL)
                         ("2"
                          (LEMMA "restrictinit_middle" ("P" "i!2" "u" "i!1"))
                          (("2" (GRIND :EXCLUDE ("rho_init" "UROLE_MIDDLE"))
                            NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (DELETE 3)
                      (("3" (USE "USER_TCC2") (("3" (PROP) NIL NIL)) NIL)) NIL)
                     ("4" (DELETE 2) (("4" (USE "USER_TCC2") NIL NIL)) NIL))
                    NIL)
                   ("2" (DELETE 2) (("2" (USE "USER_TCC2") NIL NIL)) NIL)
                   ("3" (DELETE 2)
                    (("3" (SKOLEM!) (("3" (USE "USER_TCC2") NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            ";;; users maintain the rank function"))
          NIL))
        NIL)
       ("4" (DELETE 2)
        (("4" (COMMENT "T is not in rho")
          (("4" (SKOLEM-TYPEPRED)
            (("4" (EXPAND "T")
              (("4" (REPLACE -1 -2)
                (("4" (DELETE -1) (("4" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            ";;; T is not in rho"))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|authentication_by_rank| FORMULA-DECL NIL |dynetwork| NIL)
    (|event| TYPE-DECL NIL |dynetwork| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|R_init| CONST-DECL "set[event]" |gnsl_last| NIL)
    (T CONST-DECL "set[event]" |gnsl_last| NIL)
    (|rho_init| DEF-DECL "bool" |gnsl_last| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../rules/")
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|prefix_closed| CONST-DECL "bool" |processes| "../rules/")
    (|process| TYPE-EQ-DECL NIL |processes| "../rules/")
    (USER CONST-DECL "process[event]" |gnsl_last| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (INIT CONST-DECL "bool" |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|\|-| CONST-DECL "bool" |gnsl_last| NIL)
    (|Gen_weak_induction| FORMULA-DECL NIL |gnsl_last| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|elt| CONST-DECL "bool" |listprops| NIL) NIL
    (|n_last| CONST-DECL "Nonces(p, hu(p - 1), p - 1)" |gnsl_last| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|elt_append3| FORMULA-DECL NIL |listprops| NIL)
    (|elt_append1| FORMULA-DECL NIL |listprops| NIL)
    (|elt_append2| FORMULA-DECL NIL |listprops| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (E CONST-DECL "Message" |gnsl_last| NIL)
    (|uniform2_interleave2| FORMULA-DECL NIL |uniform_props3| "../rules/")
    (|#| CONST-DECL "process[T]" |restriction_rules| "../rules/")
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|msg| SHARED-ADT-ACCESSOR-DECL "[event -> M]" |dynetwork| NIL)
    (|complement| CONST-DECL "set" |sets| NIL)
    (|restriction_free_par2| FORMULA-DECL NIL |restriction_rules3| "../rules/")
    (// CONST-DECL "process" |processes| "../rules/")
    (|Interleave| CONST-DECL "process[T]" |multipar| "../rules/")
    (UROLE_INIT CONST-DECL "process[event]" |gnsl_last| NIL)
    (UROLE_LAST CONST-DECL "process[event]" |gnsl_last| NIL)
    (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL)
    (|Stop| CONST-DECL "process" |processes| "../rules/")
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat_from_3| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (UROLE_MIDDLE CONST-DECL "process[event]" |gnsl_last| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (USER_TCC2 EXISTENCE-TCC NIL |gnsl_last| NIL)
    (|restrictinit_middle| FORMULA-DECL NIL |gnsl_last| NIL)
    (|restriction_stop| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|uniform_stop2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|\|>| CONST-DECL "bool" |satisfaction| "../rules/")
    (|Par| CONST-DECL "process" |processes| "../rules/")
    (|restrictinit_init| FORMULA-DECL NIL |gnsl_last| NIL)
    (|restrictinit_last| FORMULA-DECL NIL |gnsl_last| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|restriction_free_par| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|uniform_interleave2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|RankUser| CONST-DECL "setof[trace[event]]" |dynetwork| NIL))
   1212 1182 NIL NIL))
 (|restrictmiddle_init| 0
  (|restrictmiddle_init-1| NIL 3399306423 3399308729
   ("" (AUTO-REWRITE-THEORY "sets")
    (("" (AUTO-REWRITE "n_last_TCC2")
      (("" (SKOLEM!)
        (("" (EXPAND "RankUser")
          (("" (INTERLEAVING2)
            (("" (EXPAND "UROLE_INIT")
              (("" (TYPEPRED "P!1")
                (("" (CHOICE3)
                  (("1" (PREFIX)
                    (("1" (DELETE 2 3)
                      (("1" (TYPEPRED "i!2")
                        (("1" (LEMMA "n_prop" ("P" "P!1" "u" "u!1" "r" "0"))
                          (("1"
                            (LEMMA "elt_singleton" ("t1" "i!2" "t2" "n_last"))
                            (("1" (GRIND :IF-MATCH NIL :EXCLUDE "elt") NIL
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (DELETE 2 3)
                      (("2" (PREFIX)
                        (("2" (DELETE 2 3)
                          (("2" (PREFIX)
                            (("1" (DELETE - 2 3)
                              (("1" (EXPAND "rho_middle")
                                (("1" (PROPAX) NIL NIL)) NIL))
                              NIL)
                             ("2" (DELETE 2 3)
                              (("2" (PREFIX)
                                (("1" (DELETE 2 3)
                                  (("1" (EXPAND "E")
                                    (("1" (EXPAND "rho_middle" -1)
                                      (("1" (SPLIT)
                                        (("1"
                                          (LEMMA "elt_append2"
                                           ("l1" "(:i!2:)" "l2" "i!3`1" "t"
                                            "n_last"))
                                          (("1"
                                            (GRIND :IF-MATCH NIL :EXCLUDE
                                             "elt")
                                            NIL NIL))
                                          NIL)
                                         ("2" (FLATTEN)
                                          (("2" (SKOLEM!)
                                            (("2" (DECOMPOSE-EQUALITY -1)
                                              (("2" (DECOMPOSE-EQUALITY -2)
                                                (("2" (DECOMPOSE-EQUALITY -1)
                                                  (("2" (DECOMPOSE-EQUALITY -2)
                                                    (("2"
                                                      (TYPEPRED "i!3`1" "i!3`2"
                                                       "nl!1" "hu_list" "i!1")
                                                      (("2"
                                                        (EXPAND "rho_middle" 1)
                                                        (("2" (FLATTEN)
                                                          (("2"
                                                            (DELETE -1
                                                                    -3
                                                                    -5
                                                                    -7
                                                                    1
                                                                    2)
                                                            (("2"
                                                              (CASE "P!1=p")
                                                              (("1"
                                                                (COMMENT
                                                                 "next message is sent to hu(1)")
                                                                (("1"
                                                                  (INST 1 "1")
                                                                  (("1" (SPLIT)
                                                                    (("1"
                                                                      (DECOMPOSE-EQUALITY
                                                                       1)
                                                                      (("1"
                                                                        (REPLACE
                                                                         -9
                                                                         1)
                                                                        (("1"
                                                                          (INST
                                                                           -6
                                                                           "1")
                                                                          (("1"
                                                                            (REPLACE
                                                                             -6
                                                                             1
                                                                             RL)
                                                                            (("1"
                                                                              (DELETE
                                                                               -)
                                                                              (("1"
                                                                                (GRIND)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (REPLACE*
                                                                       -1)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "length_non_zero"
                                                                         ("l"
                                                                          "nl!1"))
                                                                        (("2"
                                                                          (GROUND)
                                                                          (("2"
                                                                            (INST
                                                                             1
                                                                             "cdr(nl!1)")
                                                                            (("1"
                                                                              (DECOMPOSE-EQUALITY
                                                                               1)
                                                                              (("1"
                                                                                (DECOMPOSE-EQUALITY
                                                                                 1)
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -11
                                                                                   1)
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -13
                                                                                     1)
                                                                                    (("1"
                                                                                      (INST
                                                                                       -8
                                                                                       "0")
                                                                                      (("1"
                                                                                        (REPLACE
                                                                                         -8
                                                                                         1
                                                                                         RL)
                                                                                        (("1"
                                                                                          (DELETE
                                                                                           -)
                                                                                          (("1"
                                                                                            (GRIND)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (DECOMPOSE-EQUALITY
                                                                                 1)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "append"
                                                                                   -12)
                                                                                  (("2"
                                                                                    (DECOMPOSE-EQUALITY
                                                                                     -12)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (REWRITE
                                                                               "length_cdr"
                                                                               1)
                                                                              (("2"
                                                                                (DELETE
                                                                                 -1
                                                                                 -2
                                                                                 -3
                                                                                 -4
                                                                                 -5
                                                                                 -7
                                                                                 -8
                                                                                 -9
                                                                                 -10
                                                                                 -11
                                                                                 -12
                                                                                 -13
                                                                                 -14)
                                                                                (("2"
                                                                                  (GROUND)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  ";;; next message is sent to hu(1)"))
                                                                NIL)
                                                               ("2"
                                                                (REPLACE -8 -2)
                                                                (("2"
                                                                  (REWRITE
                                                                   "length_cdr"
                                                                   -2)
                                                                  (("2"
                                                                    (DELETE -1
                                                                            -3
                                                                            -5
                                                                            -6
                                                                            -7
                                                                            -8
                                                                            -9
                                                                            -10
                                                                            -11
                                                                            2)
                                                                    (("2"
                                                                      (GROUND)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("3" (SKOSIMP*)
                                          (("3" (DECOMPOSE-EQUALITY -2) NIL
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (DELETE - 2 3) (("2" (STOP) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "i!3`1")
                    (("2" (DELETE -1 2)
                      (("2" (LEMMA "length_non_zero" ("l" "i!3`1"))
                        (("2" (GROUND) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("3" (TYPEPRED "i!3`2")
                    (("3" (DELETE -1 -3 2) (("3" (GROUND) NIL NIL)) NIL)) NIL)
                   ("4" (TYPEPRED "i!3`2")
                    (("4" (DELETE -1 2)
                      (("4" (LEMMA "length_non_zero" ("l" "i!3`2"))
                        (("4" (GROUND) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("5" (SKOLEM!)
                    (("5" (TYPEPRED "il!1")
                      (("5" (DELETE -1 2)
                        (("5" (LEMMA "length_non_zero" ("l" "il!1"))
                          (("5" (GROUND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|member| CONST-DECL "bool" |sets| NIL)
    (|uniform2_interleave2| FORMULA-DECL NIL |uniform_props3| "../rules/")
    (|#| CONST-DECL "process[T]" |restriction_rules| "../rules/")
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|rho_middle| DEF-DECL "bool" |gnsl_last| NIL)
    (|msg| SHARED-ADT-ACCESSOR-DECL "[event -> M]" |dynetwork| NIL)
    (|complement| CONST-DECL "set" |sets| NIL)
    (|restriction_free_par2| FORMULA-DECL NIL |restriction_rules3| "../rules/")
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|R_middle| CONST-DECL "set[event]" |gnsl_last| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../rules/")
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|prefix_closed| CONST-DECL "bool" |processes| "../rules/")
    (|process| TYPE-EQ-DECL NIL |processes| "../rules/")
    (UROLE_INIT CONST-DECL "process[event]" |gnsl_last| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (INIT CONST-DECL "bool" |gnsl_last| NIL)
    (|\|-| CONST-DECL "bool" |gnsl_last| NIL)
    (|event| TYPE-DECL NIL |dynetwork| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|uniform_prefix2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|uniform_stop2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|restriction_pref| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|elt_singleton| FORMULA-DECL NIL |listprops| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (|n_last| CONST-DECL "Nonces(p, hu(p - 1), p - 1)" |gnsl_last| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|remove| DEF-DECL "list[T]" |listprops| NIL)
    (|n_prop| FORMULA-DECL NIL |gnsl_last| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|elt_append2| FORMULA-DECL NIL |listprops| NIL)
    (|x_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (|hu_list| CONST-DECL "{x: list[Identity] |
         (length(x) = p) AND (FORALL (i: nat_to_p): nth(x, i) = hu(i))}"
     |gnsl_last| NIL)
    (|y_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|x_ilist| ADT-ACCESSOR-DECL "[(ilist?) -> list[Identity]]" |gnsl_last|
     NIL)
    (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|Message_public_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/") NIL
    (|Message_nlist_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|Message_ilist_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|Message_conc_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|length_cdr| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|x_nlist| ADT-ACCESSOR-DECL "[(nlist?) -> list[Nonce]]" |gnsl_last| NIL)
    (|x_public| ADT-ACCESSOR-DECL "[(public?) -> Identity]" |gnsl_last| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|restriction_stop| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Stop| CONST-DECL "process" |processes| "../rules/")
    (|running| ADT-CONSTRUCTOR-DECL
     "[[Role, list[Identity], Nonce] -> (running?)]" |gnsl_last| NIL)
    (|running?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|signal| ADT-CONSTRUCTOR-DECL "[M -> (signal?)]" |dynetwork| NIL)
    (|signal?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|rec| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (rec?)]" |dynetwork| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|ilist| ADT-CONSTRUCTOR-DECL "[list[Identity] -> (ilist?)]" |gnsl_last|
     NIL)
    (|ilist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|nlist| ADT-CONSTRUCTOR-DECL "[list[Nonce] -> (nlist?)]" |gnsl_last| NIL)
    (|nlist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|conc| ADT-CONSTRUCTOR-DECL "[[Message, Message] -> (conc?)]" |gnsl_last|
     NIL)
    (|conc?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public| ADT-CONSTRUCTOR-DECL "[Identity -> (public?)]" |gnsl_last| NIL)
    (E CONST-DECL "Message" |gnsl_last| NIL)
    (|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|trans| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (trans?)]" |dynetwork| NIL)
    (|trans?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (>> CONST-DECL "process" |processes| "../rules/")
    (|restriction_choice3| FORMULA-DECL NIL |restriction_rules2| "../rules/")
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|uniform3_choice2| FORMULA-DECL NIL |uniform_props2| "../rules/")
    (|RankUser| CONST-DECL "setof[trace[event]]" |dynetwork| NIL))
   21967 1376 T SHOSTAK))
 (|restrictmiddle_middle| 0
  (|restrictmiddle_middle-1| NIL 3399316596 3399370978
   ("" (AUTO-REWRITE-THEORY "sets")
    (("" (AUTO-REWRITE "USER_TCC2" "n_last_TCC2")
      (("" (SKOLEM!)
        (("" (PROP)
          (("" (EXPAND "RankUser")
            (("" (INTERLEAVING2)
              (("" (EXPAND "UROLE_MIDDLE")
                (("" (TYPEPRED "P!1" "i!2`1")
                  (("" (CHOICE3)
                    (("1" (PREFIX)
                      (("1" (DELETE 2 3)
                        (("1" (PREFIX)
                          (("1" (DELETE 2 3)
                            (("1" (EXPAND "E")
                              (("1" (EXPAND "rho_middle" -1)
                                (("1" (SPLIT)
                                  (("1" (TYPEPRED "i!2`2")
                                    (("1"
                                      (LEMMA "n_prop"
                                       ("P" "P!1" "u" "u!1" "r" "i!2`1"))
                                      (("1"
                                        (LEMMA "elt_append3"
                                         ("l1" "i!3`1" "l2" "(:i!2`2:)" "t"
                                          "n_last"))
                                        (("1"
                                          (LEMMA "elt_singleton"
                                           ("t1" "i!2`2" "t2" "n_last"))
                                          (("1"
                                            (GRIND :IF-MATCH NIL :EXCLUDE
                                             "elt")
                                            NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (SKOSIMP*)
                                    (("2"
                                      (COMMENT
                                       "a contradiction is lurking in -2")
                                      (("2" (DECOMPOSE-EQUALITY -2)
                                        (("2" (DECOMPOSE-EQUALITY -1)
                                          (("2" (DECOMPOSE-EQUALITY -2)
                                            (("2"
                                              (TYPEPRED "nl!1" "i!3`1" "i!3`3"
                                               "i!3`4" "hu_list")
                                              (("2"
                                                (DELETE -1 -3 -5 -7 -9 -14 +)
                                                (("2" (CASE "P!1=p")
                                                  (("1" (REPLACE -9 -3)
                                                    (("1"
                                                      (REWRITE "length_append"
                                                       -3)
                                                      (("1"
                                                        (DELETE -4
                                                                -5
                                                                -6
                                                                -7
                                                                -8
                                                                -9
                                                                -10
                                                                -11)
                                                        (("1" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2"
                                                    (LEMMA "equality_length"
                                                     ("l1"
                                                      "append(i!3`3,i!3`4)"
                                                      "l2" "cdr(hu_list)"))
                                                    (("2" (PROP)
                                                      (("2"
                                                        (REWRITE
                                                         "length_append" -1)
                                                        (("2"
                                                          (REWRITE "length_cdr"
                                                           -1)
                                                          (("2"
                                                            (DELETE -2
                                                                    -3
                                                                    -7
                                                                    -8
                                                                    -9
                                                                    -10
                                                                    -11
                                                                    -12)
                                                            (("2" (GROUND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        ";;; a contradiction is lurking in -2"))
                                      NIL))
                                    NIL)
                                   ("3" (SKOSIMP*)
                                    (("3" (DELETE -1 -3 -4 -5 +)
                                      (("3" (DECOMPOSE-EQUALITY -1) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (DELETE 2 3)
                            (("2" (PREFIX)
                              (("2" (DELETE 2 3)
                                (("2" (PREFIX)
                                  (("1" (DELETE - 2 3 4)
                                    (("1" (EXPAND "rho_middle")
                                      (("1" (PROPAX) NIL NIL)) NIL))
                                    NIL)
                                   ("2" (DELETE -2 3)
                                    (("2" (EXPAND "R_middle" 2)
                                      (("2"
                                        (CASE
                                            "i!1=i!2`1 AND append(i!3`3,cons(u!1,i!3`4))=hu_list AND nth(i!3`2,P!1-2-i!2`1)=n_last")
                                        (("1" (DELETE -2 -3 -4 -5 1 3)
                                          (("1" (GROUND) NIL NIL)) NIL)
                                         ("2" (DELETE 3)
                                          (("2" (EXPAND "E")
                                            (("2"
                                              (COMMENT
                                               "in this situation, the user is not blocked on R, so explore all options that make -1 true")
                                              (("2" (EXPAND "rho_middle" -1)
                                                (("2" (SPLIT -1)
                                                  (("1"
                                                    (COMMENT
                                                     "the received message was 'clean', so the outgoing messages will be too")
                                                    (("1" (DELETE -2 -3 -4 1 3)
                                                      (("1"
                                                        (EXPAND "LastMessage")
                                                        (("1" (LIFT-IF)
                                                          (("1" (PROP)
                                                            (("1" (PREFIX)
                                                              (("1" (DELETE 2)
                                                                (("1"
                                                                  (LEMMA
                                                                   "elt_append2"
                                                                   ("l1"
                                                                    "(:i!2`2:)"
                                                                    "l2"
                                                                    "i!3`2" "t"
                                                                    "n_last"))
                                                                  (("1"
                                                                    (GRIND
                                                                     :EXCLUDE
                                                                     "elt")
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (DELETE - 2)
                                                                (("2" (STOP)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (PREFIX)
                                                              (("1" (DELETE 3)
                                                                (("1"
                                                                  (LEMMA
                                                                   "elt_append2"
                                                                   ("l1"
                                                                    "(:i!2`2:)"
                                                                    "l2"
                                                                    "i!3`2" "t"
                                                                    "n_last"))
                                                                  (("1"
                                                                    (GRIND
                                                                     :IF-MATCH
                                                                     NIL
                                                                     :EXCLUDE
                                                                     "elt")
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (DELETE - 2 3)
                                                                (("2" (STOP)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      ";;; the received message was 'clean', so the outgoing messages will be too"))
                                                    NIL)
                                                   ("2" (SKOSIMP*)
                                                    (("2"
                                                      (DELETE -1 -3 -4 -5 +)
                                                      (("2"
                                                        (DECOMPOSE-EQUALITY -1)
                                                        NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3"
                                                    (COMMENT
                                                     "in this case, the received message was escaped in rho and the current user isn't blocked on R, so the outgoing message must be shown to be escaped in rho too")
                                                    (("3"
                                                      (COMMENT
                                                       "the approach is to prove each conjunct in 1, except for the first, which will be needed to prove that the outgoing message is in rho")
                                                      (("3"
                                                        (COMMENT
                                                         "a special case is the first case of LastMessage, which should not occur")
                                                        (("3" (SKOSIMP*)
                                                          (("3"
                                                            (DECOMPOSE-EQUALITY
                                                             -1)
                                                            (("3"
                                                              (DECOMPOSE-EQUALITY
                                                               -2)
                                                              (("3"
                                                                (DECOMPOSE-EQUALITY
                                                                 -1)
                                                                (("3"
                                                                  (DECOMPOSE-EQUALITY
                                                                   -2)
                                                                  (("3"
                                                                    (TYPEPRED
                                                                     "i!3`2"
                                                                     "i!3`3"
                                                                     "i!3`4"
                                                                     "nl!1"
                                                                     "hu_list"
                                                                     "i!1"
                                                                     "j!1")
                                                                    (("3"
                                                                      (DELETE
                                                                       -1
                                                                       -3
                                                                       -5
                                                                       -7
                                                                       -9
                                                                       -20
                                                                       -21)
                                                                      (("3"
                                                                        (COMMENT
                                                                         "establish some helpful equalities first")
                                                                        (("3"
                                                                          (CASE
                                                                              "P!1=p"
                                                                            "j!1=i!2`1"
                                                                            "length(append(i!3`3,cons(hu(i!2`1),i!3`4)))=p")
                                                                          (("1"
                                                                            (REPLACE*
                                                                             -2
                                                                             -3
                                                                             -16)
                                                                            (("1"
                                                                              (DELETE
                                                                               -2
                                                                               -16)
                                                                              (("1"
                                                                                (SPLIT)
                                                                                (("1"
                                                                                  (COMMENT
                                                                                   "get rid of first case of LastMessage first")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "LastMessage")
                                                                                    (("1"
                                                                                      (LIFT-IF)
                                                                                      (("1"
                                                                                        (PROP)
                                                                                        (("1"
                                                                                          (DELETE
                                                                                           -2
                                                                                           -3
                                                                                           -4
                                                                                           -5
                                                                                           -6
                                                                                           -7
                                                                                           -8
                                                                                           -9
                                                                                           -10
                                                                                           -12
                                                                                           -14
                                                                                           -15
                                                                                           1)
                                                                                          (("1"
                                                                                            (GROUND)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (COMMENT
                                                                                           "first case has been gotten rid of, now prove that the outgoing message conforms to rho")
                                                                                          (("2"
                                                                                            (PREFIX)
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "E")
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "rho_middle"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (FLATTEN)
                                                                                                  (("1"
                                                                                                    (DELETE
                                                                                                     1
                                                                                                     2
                                                                                                     4
                                                                                                     5
                                                                                                     7)
                                                                                                    (("1"
                                                                                                      (COMMENT
                                                                                                       "the next message is sent to i!2`1+1")
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         1
                                                                                                         "i!2`1+1")
                                                                                                        (("1"
                                                                                                          (LEMMA
                                                                                                           "equality_nth"
                                                                                                           ("l1"
                                                                                                            "append(i!3`3,i!3`4)"
                                                                                                            "l2"
                                                                                                            "remove(hu_list,i!2`1)"))
                                                                                                          (("1"
                                                                                                            (LEMMA
                                                                                                             "nth_append"
                                                                                                             ("l1"
                                                                                                              "i!3`3"
                                                                                                              "l2"
                                                                                                              "i!3`4"))
                                                                                                            (("1"
                                                                                                              (LEMMA
                                                                                                               "nth_remove"
                                                                                                               ("l"
                                                                                                                "hu_list"
                                                                                                                "i"
                                                                                                                "i!2`1"))
                                                                                                              (("1"
                                                                                                                (PROP)
                                                                                                                (("1"
                                                                                                                  (DECOMPOSE-EQUALITY
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (INST
                                                                                                                     -1
                                                                                                                     "i!2`1")
                                                                                                                    (("1"
                                                                                                                      (INST
                                                                                                                       -2
                                                                                                                       "i!2`1")
                                                                                                                      (("1"
                                                                                                                        (INST
                                                                                                                         -3
                                                                                                                         "i!2`1")
                                                                                                                        (("1"
                                                                                                                          (DELETE
                                                                                                                           -4
                                                                                                                           -5
                                                                                                                           -6
                                                                                                                           -8
                                                                                                                           -9
                                                                                                                           -10
                                                                                                                           -12
                                                                                                                           -13
                                                                                                                           -14
                                                                                                                           -15
                                                                                                                           -16
                                                                                                                           -17
                                                                                                                           -18
                                                                                                                           2
                                                                                                                           3)
                                                                                                                          (("1"
                                                                                                                            (INST
                                                                                                                             -5
                                                                                                                             "1+i!2`1")
                                                                                                                            (("1"
                                                                                                                              (GRIND
                                                                                                                               :EXCLUDE
                                                                                                                               ("append"
                                                                                                                                "remove"))
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (REWRITE
                                                                                                                       "length_append"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (DELETE
                                                                                                                         -1
                                                                                                                         -2
                                                                                                                         -3
                                                                                                                         -4
                                                                                                                         -5
                                                                                                                         -8
                                                                                                                         -9
                                                                                                                         -10
                                                                                                                         -11
                                                                                                                         -13
                                                                                                                         -15
                                                                                                                         -16
                                                                                                                         -17
                                                                                                                         2
                                                                                                                         3
                                                                                                                         4)
                                                                                                                        (("2"
                                                                                                                          (GROUND)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (LEMMA
                                                                                                                   "length_non_zero"
                                                                                                                   ("l"
                                                                                                                    "nl!1"))
                                                                                                                  (("2"
                                                                                                                    (GROUND)
                                                                                                                    (("2"
                                                                                                                      (INST
                                                                                                                       1
                                                                                                                       "cdr(nl!1)")
                                                                                                                      (("1"
                                                                                                                        (DECOMPOSE-EQUALITY
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (DECOMPOSE-EQUALITY
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (REWRITE
                                                                                                                             "length_nth_equality[Identity]"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (DELETE
                                                                                                                               -1
                                                                                                                               -2
                                                                                                                               -3
                                                                                                                               -4
                                                                                                                               -5
                                                                                                                               -6
                                                                                                                               -7
                                                                                                                               -8
                                                                                                                               -11
                                                                                                                               -13
                                                                                                                               -14
                                                                                                                               -15
                                                                                                                               -16
                                                                                                                               -17
                                                                                                                               -18
                                                                                                                               -19
                                                                                                                               2
                                                                                                                               3
                                                                                                                               4)
                                                                                                                              (("1"
                                                                                                                                (REWRITE
                                                                                                                                 "length_append"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (REWRITE
                                                                                                                                   "length_remove"
                                                                                                                                   1
                                                                                                                                   :DIR
                                                                                                                                   RL)
                                                                                                                                  (("1"
                                                                                                                                    (EXPAND
                                                                                                                                     "length"
                                                                                                                                     1
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (REWRITE
                                                                                                                                       "length_cdr"
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (GROUND)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL)
                                                                                                                                   ("2"
                                                                                                                                    (LEMMA
                                                                                                                                     "length_non_zero"
                                                                                                                                     ("l"
                                                                                                                                      "hu_list"))
                                                                                                                                    (("2"
                                                                                                                                      (DELETE
                                                                                                                                       -2
                                                                                                                                       -3
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (GROUND)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL)
                                                                                                                             ("2"
                                                                                                                              (SKOLEM-TYPEPRED)
                                                                                                                              (("2"
                                                                                                                                (REWRITE
                                                                                                                                 "length_append"
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (EXPAND
                                                                                                                                   "length"
                                                                                                                                   -1
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (REWRITE
                                                                                                                                     "length_cdr"
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (SIMPLIFY
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (DELETE
                                                                                                                                         -2
                                                                                                                                         -3
                                                                                                                                         -7
                                                                                                                                         -8
                                                                                                                                         -9
                                                                                                                                         -12
                                                                                                                                         -15
                                                                                                                                         -17
                                                                                                                                         -18
                                                                                                                                         -19
                                                                                                                                         -20
                                                                                                                                         2
                                                                                                                                         3
                                                                                                                                         4)
                                                                                                                                        (("2"
                                                                                                                                          (INST
                                                                                                                                           -2
                                                                                                                                           "i!4")
                                                                                                                                          (("1"
                                                                                                                                            (INST
                                                                                                                                             -3
                                                                                                                                             "i!4")
                                                                                                                                            (("1"
                                                                                                                                              (INST
                                                                                                                                               -4
                                                                                                                                               "i!4")
                                                                                                                                              (("1"
                                                                                                                                                (REPLACE*
                                                                                                                                                 -5
                                                                                                                                                 -6)
                                                                                                                                                (("1"
                                                                                                                                                  (LEMMA
                                                                                                                                                   "nth_append"
                                                                                                                                                   ("l1"
                                                                                                                                                    "i!3`3"
                                                                                                                                                    "l2"
                                                                                                                                                    "cons(hu(i!2`1),cdr(i!3`4))"
                                                                                                                                                    "i"
                                                                                                                                                    "i!4"))
                                                                                                                                                  (("1"
                                                                                                                                                    (REPLACE
                                                                                                                                                     -1
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (DELETE
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (LEMMA
                                                                                                                                                         "nth_remove"
                                                                                                                                                         ("l"
                                                                                                                                                          "hu_list"
                                                                                                                                                          "i"
                                                                                                                                                          "1+i!2`1"
                                                                                                                                                          "j"
                                                                                                                                                          "i!4"))
                                                                                                                                                        (("1"
                                                                                                                                                          (REPLACE
                                                                                                                                                           -1
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (DELETE
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (CASE
                                                                                                                                                                  "i!4<i!2`1 OR i!4=i!2`1 OR i!4>i!2`1")
                                                                                                                                                              (("1"
                                                                                                                                                                (EXPAND
                                                                                                                                                                 "nth"
                                                                                                                                                                 1
                                                                                                                                                                 2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (GRIND
                                                                                                                                                                   :EXCLUDE
                                                                                                                                                                   ("nth"
                                                                                                                                                                    "append"
                                                                                                                                                                    "remove"))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (REWRITE
                                                                                                                                                                     "nth_cdr"
                                                                                                                                                                     1)
                                                                                                                                                                    NIL
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL)
                                                                                                                                                               ("2"
                                                                                                                                                                (DELETE
                                                                                                                                                                 -
                                                                                                                                                                 2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (GROUND)
                                                                                                                                                                  NIL
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL)
                                                                                                                                                         ("2"
                                                                                                                                                          (DELETE
                                                                                                                                                           -2
                                                                                                                                                           -3
                                                                                                                                                           -4
                                                                                                                                                           -5
                                                                                                                                                           -6
                                                                                                                                                           -8
                                                                                                                                                           -9
                                                                                                                                                           -10
                                                                                                                                                           2)
                                                                                                                                                          (("2"
                                                                                                                                                            (GROUND)
                                                                                                                                                            NIL
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL)
                                                                                                                                                   ("2"
                                                                                                                                                    (EXPAND
                                                                                                                                                     "length"
                                                                                                                                                     1
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (REWRITE
                                                                                                                                                       "length_cdr"
                                                                                                                                                       1)
                                                                                                                                                      (("2"
                                                                                                                                                        (DELETE
                                                                                                                                                         -2
                                                                                                                                                         -3
                                                                                                                                                         -4
                                                                                                                                                         -7
                                                                                                                                                         -8
                                                                                                                                                         -9
                                                                                                                                                         -10
                                                                                                                                                         2)
                                                                                                                                                        (("2"
                                                                                                                                                          (GROUND)
                                                                                                                                                          NIL
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL)
                                                                                                                                             ("2"
                                                                                                                                              (DELETE
                                                                                                                                               -2
                                                                                                                                               -3
                                                                                                                                               -7
                                                                                                                                               -8
                                                                                                                                               -9
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (GROUND)
                                                                                                                                                NIL
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL)
                                                                                                                                           ("2"
                                                                                                                                            (REWRITE
                                                                                                                                             "length_append"
                                                                                                                                             1)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (DECOMPOSE-EQUALITY
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (DELETE
                                                                                                                             -1
                                                                                                                             -3
                                                                                                                             -4
                                                                                                                             -5
                                                                                                                             -6
                                                                                                                             -7
                                                                                                                             -8
                                                                                                                             -9
                                                                                                                             -10
                                                                                                                             -11
                                                                                                                             -12
                                                                                                                             -13
                                                                                                                             -14
                                                                                                                             -15
                                                                                                                             -16
                                                                                                                             -17
                                                                                                                             -19
                                                                                                                             -20
                                                                                                                             2
                                                                                                                             3)
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "append"
                                                                                                                               -2)
                                                                                                                              (("2"
                                                                                                                                (DECOMPOSE-EQUALITY
                                                                                                                                 -2)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (REWRITE
                                                                                                                         "length_cdr"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (DELETE
                                                                                                                           -1
                                                                                                                           -2
                                                                                                                           -3
                                                                                                                           -4
                                                                                                                           -5
                                                                                                                           -6
                                                                                                                           -7
                                                                                                                           -8
                                                                                                                           -9
                                                                                                                           -10
                                                                                                                           -12
                                                                                                                           -13
                                                                                                                           -14
                                                                                                                           -15
                                                                                                                           -16
                                                                                                                           -17
                                                                                                                           -18
                                                                                                                           -19
                                                                                                                           -20
                                                                                                                           2
                                                                                                                           3)
                                                                                                                          (("2"
                                                                                                                            (GROUND)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        ";;; the next message is sent to i!2`1+1"))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (DELETE
                                                                                               -
                                                                                               2
                                                                                               3
                                                                                               4
                                                                                               5
                                                                                               6)
                                                                                              (("2"
                                                                                                (STOP)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            ";;; first case has been gotten rid of, now prove that the outgoing message conforms to rho"))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    ";;; get rid of first case of LastMessage first"))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (DELETE
                                                                                   2)
                                                                                  (("2"
                                                                                    (REWRITE
                                                                                     "length_nth_equality[Identity]"
                                                                                     1)
                                                                                    (("2"
                                                                                      (SKOLEM-TYPEPRED)
                                                                                      (("2"
                                                                                        (LEMMA
                                                                                         "nth_append"
                                                                                         ("l1"
                                                                                          "i!3`3"
                                                                                          "l2"
                                                                                          "cons(hu(i!2`1),i!3`4)"
                                                                                          "i"
                                                                                          "i!4"))
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1
                                                                                           1)
                                                                                          (("1"
                                                                                            (DELETE
                                                                                             -1)
                                                                                            (("1"
                                                                                              (LEMMA
                                                                                               "equality_nth"
                                                                                               ("l1"
                                                                                                "append(i!3`3,i!3`4)"
                                                                                                "l2"
                                                                                                "remove(hu_list,i!2`1)"))
                                                                                              (("1"
                                                                                                (PROP)
                                                                                                (("1"
                                                                                                  (LEMMA
                                                                                                   "nth_append"
                                                                                                   ("l1"
                                                                                                    "i!3`3"
                                                                                                    "l2"
                                                                                                    "i!3`4"))
                                                                                                  (("1"
                                                                                                    (LEMMA
                                                                                                     "nth_remove"
                                                                                                     ("l"
                                                                                                      "hu_list"
                                                                                                      "i"
                                                                                                      "i!2`1"))
                                                                                                    (("1"
                                                                                                      (DELETE
                                                                                                       -7
                                                                                                       -10
                                                                                                       -13
                                                                                                       -15
                                                                                                       -17
                                                                                                       -18
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (EXPAND
                                                                                                         "nth"
                                                                                                         1
                                                                                                         2)
                                                                                                        (("1"
                                                                                                          (INST
                                                                                                           -10
                                                                                                           "i!2`1")
                                                                                                          (("1"
                                                                                                            (CASE
                                                                                                                "i!4<i!2`1 OR i!4=i!2`1 OR (i!2`1<i!4 AND i!4<p-1) OR i!4=p-1")
                                                                                                            (("1"
                                                                                                              (GRIND
                                                                                                               :EXCLUDE
                                                                                                               ("nth"
                                                                                                                "append"
                                                                                                                "remove"))
                                                                                                              (("1"
                                                                                                                (REVEAL
                                                                                                                 -3)
                                                                                                                (("1"
                                                                                                                  (INST
                                                                                                                   -1
                                                                                                                   "i!4-1")
                                                                                                                  (("1"
                                                                                                                    (DELETE
                                                                                                                     -3
                                                                                                                     -4
                                                                                                                     -5
                                                                                                                     -6
                                                                                                                     -7
                                                                                                                     -8
                                                                                                                     -9
                                                                                                                     -10
                                                                                                                     -11
                                                                                                                     -12
                                                                                                                     -13
                                                                                                                     -14
                                                                                                                     -15
                                                                                                                     -16
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (GROUND)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (DELETE
                                                                                                               -1
                                                                                                               -2
                                                                                                               -3
                                                                                                               -6
                                                                                                               -7
                                                                                                               -8
                                                                                                               -9
                                                                                                               -10
                                                                                                               -11
                                                                                                               -12
                                                                                                               -13
                                                                                                               2
                                                                                                               3)
                                                                                                              (("2"
                                                                                                                (GROUND)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (REWRITE
                                                                                           "length_append"
                                                                                           -1)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("3"
                                                                                  (DELETE
                                                                                   -1
                                                                                   -2
                                                                                   -4
                                                                                   -5
                                                                                   -7
                                                                                   -8
                                                                                   -9
                                                                                   -11
                                                                                   -14
                                                                                   2)
                                                                                  (("3"
                                                                                    (LEMMA
                                                                                     "equality_nth"
                                                                                     ("l1"
                                                                                      "cons(i!2`2,i!3`2)"
                                                                                      "l2"
                                                                                      "append(nl!1,(:n_last:))"))
                                                                                    (("3"
                                                                                      (PROP)
                                                                                      (("3"
                                                                                        (INST
                                                                                         -1
                                                                                         "p-1-i!2`1")
                                                                                        (("1"
                                                                                          (EXPAND
                                                                                           "nth"
                                                                                           -1
                                                                                           1)
                                                                                          (("1"
                                                                                            (GROUND)
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -1
                                                                                               1)
                                                                                              (("1"
                                                                                                (REWRITE
                                                                                                 "nth_append"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   "nth"
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (PROPAX)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (DELETE
                                                                                                   -1
                                                                                                   -2
                                                                                                   -4
                                                                                                   -5
                                                                                                   -6
                                                                                                   -7
                                                                                                   2
                                                                                                   3)
                                                                                                  (("2"
                                                                                                    (GRIND)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (EXPAND
                                                                                           "length"
                                                                                           1)
                                                                                          (("2"
                                                                                            (DELETE
                                                                                             -2
                                                                                             -5
                                                                                             2)
                                                                                            (("2"
                                                                                              (GROUND)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (DELETE
                                                                             -1
                                                                             -3
                                                                             -6
                                                                             -7
                                                                             -8
                                                                             -9
                                                                             -10
                                                                             -11
                                                                             -12
                                                                             -13
                                                                             -14
                                                                             -15
                                                                             -16
                                                                             2
                                                                             3
                                                                             4)
                                                                            (("2"
                                                                              (REWRITE
                                                                               "length_append"
                                                                               1)
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "length"
                                                                                 1
                                                                                 1)
                                                                                (("2"
                                                                                  (GROUND)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("3"
                                                                            (LEMMA
                                                                             "equality_length"
                                                                             ("l1"
                                                                              "cons(i!2`2,i!3`2)"
                                                                              "l2"
                                                                              "append(nl!1,(:n_last:))"))
                                                                            (("3"
                                                                              (DELETE
                                                                               -4
                                                                               -5
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11
                                                                               -12
                                                                               -14
                                                                               -15
                                                                               -16
                                                                               2
                                                                               3
                                                                               4)
                                                                              (("3"
                                                                                (PROP)
                                                                                (("3"
                                                                                  (REWRITE
                                                                                   "length_append"
                                                                                   -1)
                                                                                  (("3"
                                                                                    (EXPAND
                                                                                     "length"
                                                                                     -1
                                                                                     1)
                                                                                    (("3"
                                                                                      (REPLACE*
                                                                                       -2
                                                                                       -3
                                                                                       -4)
                                                                                      (("3"
                                                                                        (DELETE
                                                                                         -2
                                                                                         -3
                                                                                         -4
                                                                                         -5)
                                                                                        (("3"
                                                                                          (GRIND)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("4"
                                                                            (LEMMA
                                                                             "equality_length"
                                                                             ("l1"
                                                                              "append(i!3`3,i!3`4)"
                                                                              "l2"
                                                                              "remove(hu_list,j!1)"))
                                                                            (("4"
                                                                              (DELETE
                                                                               -2
                                                                               -5
                                                                               -7
                                                                               -8
                                                                               -9
                                                                               -10
                                                                               -11
                                                                               -12
                                                                               -14
                                                                               -15
                                                                               2
                                                                               3
                                                                               4)
                                                                              (("4"
                                                                                (PROP)
                                                                                (("4"
                                                                                  (REWRITE
                                                                                   "length_append"
                                                                                   -1)
                                                                                  (("4"
                                                                                    (REWRITE
                                                                                     "length_remove"
                                                                                     -1
                                                                                     :DIR
                                                                                     RL)
                                                                                    (("1"
                                                                                      (GROUND)
                                                                                      NIL
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (TYPEPRED
                                                                                       "p")
                                                                                      (("2"
                                                                                        (DELETE
                                                                                         -2
                                                                                         -3
                                                                                         -4
                                                                                         -6
                                                                                         2)
                                                                                        (("2"
                                                                                          (LEMMA
                                                                                           "length_non_zero"
                                                                                           ("l"
                                                                                            "hu_list"))
                                                                                          (("2"
                                                                                            (GROUND)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("5"
                                                                            (TYPEPRED
                                                                             "i!2`1"
                                                                             "p")
                                                                            (("5"
                                                                              (LEMMA
                                                                               "equality_length"
                                                                               ("l1"
                                                                                "append(i!3`3,i!3`4)"
                                                                                "l2"
                                                                                "remove(hu_list,j!1)"))
                                                                              (("5"
                                                                                (DELETE
                                                                                 -2
                                                                                 -5
                                                                                 -8
                                                                                 -10
                                                                                 -11
                                                                                 -12
                                                                                 -13
                                                                                 -14
                                                                                 -15
                                                                                 -17
                                                                                 -18
                                                                                 2
                                                                                 3
                                                                                 4)
                                                                                (("5"
                                                                                  (PROP)
                                                                                  (("5"
                                                                                    (REWRITE
                                                                                     "length_append"
                                                                                     -1)
                                                                                    (("5"
                                                                                      (REWRITE
                                                                                       "length_remove"
                                                                                       -1
                                                                                       :DIR
                                                                                       RL)
                                                                                      (("1"
                                                                                        (GROUND)
                                                                                        NIL
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (LEMMA
                                                                                         "length_non_zero"
                                                                                         ("l"
                                                                                          "hu_list"))
                                                                                        (("2"
                                                                                          (DELETE
                                                                                           -2
                                                                                           -3
                                                                                           -5
                                                                                           -6
                                                                                           -7
                                                                                           -8
                                                                                           2)
                                                                                          (("2"
                                                                                            (GROUND)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          ";;; establish some helpful equalities first"))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          ";;; a special case is the first case of LastMessage, which should not occur"))
                                                        ";;; the approach is to prove each conjunct in 1, except for the first, which will be needed to prove that the outgoing message is in rho"))
                                                      ";;; in this case, the received message was escaped in rho and the current user isn't blocked on R, so the outgoing message must be shown to be escaped in rho too"))
                                                    NIL))
                                                  NIL))
                                                ";;; in this situation, the user is not blocked on R, so explore all options that make -1 true"))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (TYPEPRED "i!3`2")
                      (("2" (DELETE -1 -3 -4 -5 2 3) (("2" (GROUND) NIL NIL))
                        NIL))
                      NIL)
                     ("3" (TYPEPRED "i!3`4")
                      (("3" (DELETE -1 -4 2 3)
                        (("3" (LEMMA "length_non_zero" ("l" "i!3`4"))
                          (("3" (GROUND) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("4" (TYPEPRED "i!3`3")
                      (("4" (DELETE -1 -3 -5 2 3)
                        (("4" (LEMMA "length_non_zero" ("l" "i!3`3"))
                          (("4" (GROUND) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("5" (SKOLEM!)
                      (("5" (TYPEPRED "il2!1")
                        (("5" (DELETE -1 -4 2 3)
                          (("5" (LEMMA "length_non_zero" ("l" "il2!1"))
                            (("5" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|uniform2_interleave2| FORMULA-DECL NIL |uniform_props3| "../rules/")
    (|#| CONST-DECL "process[T]" |restriction_rules| "../rules/")
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|rho_middle| DEF-DECL "bool" |gnsl_last| NIL)
    (|msg| SHARED-ADT-ACCESSOR-DECL "[event -> M]" |dynetwork| NIL)
    (USER_TCC2 EXISTENCE-TCC NIL |gnsl_last| NIL)
    (|complement| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|restriction_free_par2| FORMULA-DECL NIL |restriction_rules3| "../rules/")
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|R_middle| CONST-DECL "set[event]" |gnsl_last| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../rules/")
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|prefix_closed| CONST-DECL "bool" |processes| "../rules/")
    (|process| TYPE-EQ-DECL NIL |processes| "../rules/")
    (|nat_from_3| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (UROLE_MIDDLE CONST-DECL "process[event]" |gnsl_last| NIL)
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (INIT CONST-DECL "bool" |gnsl_last| NIL)
    (|\|-| CONST-DECL "bool" |gnsl_last| NIL)
    (|event| TYPE-DECL NIL |dynetwork| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|uniform_prefix2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|uniform_stop2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|restriction_pref| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|n_prop| FORMULA-DECL NIL |gnsl_last| NIL)
    (|elt_singleton| FORMULA-DECL NIL |listprops| NIL)
    (|remove| DEF-DECL "list[T]" |listprops| NIL)
    (|n_last| CONST-DECL "Nonces(p, hu(p - 1), p - 1)" |gnsl_last| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|elt_append3| FORMULA-DECL NIL |listprops| NIL)
    (|x_nlist| ADT-ACCESSOR-DECL "[(nlist?) -> list[Nonce]]" |gnsl_last| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|length_append| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|length_cdr| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|equality_length| FORMULA-DECL NIL |listprops| NIL)
    (|x_ilist| ADT-ACCESSOR-DECL "[(ilist?) -> list[Identity]]" |gnsl_last|
     NIL)
    (|y_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (|hu_list| CONST-DECL "{x: list[Identity] |
         (length(x) = p) AND (FORALL (i: nat_to_p): nth(x, i) = hu(i))}"
     |gnsl_last| NIL)
    (|x_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|elt_append2| FORMULA-DECL NIL |listprops| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|\|>| CONST-DECL "bool" |satisfaction| "../rules/")
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|restriction_stop| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|equality_nth| FORMULA-DECL NIL |listprops| NIL)
    (|nth_remove| FORMULA-DECL NIL |listprops| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|nl!1| SKOLEM-CONST-DECL "{x: list[Nonce] | length(x) = -1 - j!1 + p}"
     |gnsl_last| NIL)
    (|j!1| SKOLEM-CONST-DECL "{x: nat | 0 < x AND x <= i!1}" |gnsl_last| NIL)
    (|i!1| SKOLEM-CONST-DECL "nat_1_to(p)" |gnsl_last| NIL)
    (|Message_nlist_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|Message_ilist_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|i!4| SKOLEM-CONST-DECL
     "below[length[Identity](append(i!3`3, cons(hu(i!2`1), cdr(i!3`4))))]"
     |gnsl_last| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nth_cdr| FORMULA-DECL NIL |listprops| NIL)
    (|length_remove| FORMULA-DECL NIL |listprops| NIL)
    (|length_nth_equality| FORMULA-DECL NIL |listprops| NIL)
    (|Message_conc_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|Message_public_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (P!1 SKOLEM-CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|u!1| SKOLEM-CONST-DECL "Identity" |gnsl_last| NIL)
    (|i!2| SKOLEM-CONST-DECL "[k: nat_1_to(P!1), Nonces(P!1, u!1, k)]"
     |gnsl_last| NIL)
    (|i!3| SKOLEM-CONST-DECL "[{x: list[Nonce] | length(x) = i!2`1},
 {x: list[Nonce] | length(x) = P!1 - 1 - i!2`1},
 {x: list[Identity] | length(x) = i!2`1},
 {x: list[Identity] | length(x) = P!1 - 1 - i!2`1}]"
     |gnsl_last| NIL)
    (|nth_append| FORMULA-DECL NIL |listprops| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|x_public| ADT-ACCESSOR-DECL "[(public?) -> Identity]" |gnsl_last| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Stop| CONST-DECL "process" |processes| "../rules/")
    (|LastMessage| CONST-DECL "event" |gnsl_last| NIL)
    (|running| ADT-CONSTRUCTOR-DECL
     "[[Role, list[Identity], Nonce] -> (running?)]" |gnsl_last| NIL)
    (|running?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|signal| ADT-CONSTRUCTOR-DECL "[M -> (signal?)]" |dynetwork| NIL)
    (|signal?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|trans| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (trans?)]" |dynetwork| NIL)
    (|trans?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|ilist| ADT-CONSTRUCTOR-DECL "[list[Identity] -> (ilist?)]" |gnsl_last|
     NIL)
    (|ilist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|nlist| ADT-CONSTRUCTOR-DECL "[list[Nonce] -> (nlist?)]" |gnsl_last| NIL)
    (|nlist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|conc| ADT-CONSTRUCTOR-DECL "[[Message, Message] -> (conc?)]" |gnsl_last|
     NIL)
    (|conc?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public| ADT-CONSTRUCTOR-DECL "[Identity -> (public?)]" |gnsl_last| NIL)
    (E CONST-DECL "Message" |gnsl_last| NIL)
    (|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|rec| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (rec?)]" |dynetwork| NIL)
    (>> CONST-DECL "process" |processes| "../rules/")
    (|restriction_choice3| FORMULA-DECL NIL |restriction_rules2| "../rules/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|uniform3_choice2| FORMULA-DECL NIL |uniform_props2| "../rules/")
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|RankUser| CONST-DECL "setof[trace[event]]" |dynetwork| NIL))
   235379 7490 T NIL))
 (|restrictmiddle_last| 0
  (|restrictmiddle_last-1| NIL 3399305618 3399311328
   ("" (AUTO-REWRITE-THEORY "sets")
    (("" (AUTO-REWRITE "n_last_TCC2")
      (("" (SKOLEM!)
        (("" (EXPAND "RankUser")
          (("" (INTERLEAVING2)
            (("" (EXPAND "UROLE_LAST")
              (("" (LIFT-IF)
                (("" (TYPEPRED "P!1")
                  (("" (PROP)
                    (("1" (CHOICE3)
                      (("1" (TYPEPRED "i!2")
                        (("1"
                          (LEMMA "n_orig" ("P" "P!1" "u" "u!1" "r" "P!1-1"))
                          (("1" (GROUND)
                            (("1" (DELETE -1)
                              (("1" (REPLACE* -1 -2 -4)
                                (("1" (DELETE -1 -3 -4)
                                  (("1" (PREFIX)
                                    (("1" (DELETE 2 3)
                                      (("1" (PREFIX)
                                        (("1" (DELETE 2 3)
                                          (("1"
                                            (TYPEPRED "i!3`1" "i!3`2" "hu_list"
                                             "i!1")
                                            (("1" (DELETE -1 -3 -6 -11)
                                              (("1" (EXPAND "E")
                                                (("1" (EXPAND "rho_middle")
                                                  (("1" (FLATTEN)
                                                    (("1" (DELETE 1 3)
                                                      (("1" (SPLIT)
                                                        (("1"
                                                          (DECOMPOSE-EQUALITY
                                                           1)
                                                          (("1" (INST -3 "0")
                                                            (("1"
                                                              (REPLACE -3 1 RL)
                                                              (("1"
                                                                (EXPAND "nth"
                                                                        1)
                                                                (("1" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (INST 1 "i!3`1")
                                                          (("2"
                                                            (DECOMPOSE-EQUALITY
                                                             1)
                                                            (("2"
                                                              (DECOMPOSE-EQUALITY
                                                               1)
                                                              (("2"
                                                                (CASE
                                                                    "length(append(cdr(i!3`2),(:hu(p-1):)))=p-1")
                                                                (("1"
                                                                  (REWRITE
                                                                   "length_nth_equality[Identity]")
                                                                  (("1"
                                                                    (REWRITE
                                                                     "length_cdr"
                                                                     1)
                                                                    (("1"
                                                                      (DELETE
                                                                       -2
                                                                       -3
                                                                       -4
                                                                       -6
                                                                       -7
                                                                       -8
                                                                       -9
                                                                       -10
                                                                       2)
                                                                      (("1"
                                                                        (GROUND)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (SKOLEM-TYPEPRED)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "nth_append"
                                                                       ("l1"
                                                                        "cdr(i!3`2)"
                                                                        "l2"
                                                                        "(:hu(p-1):)"
                                                                        "i"
                                                                        "i!4"))
                                                                      (("1"
                                                                        (REPLACE
                                                                         -1
                                                                         1)
                                                                        (("1"
                                                                          (DELETE
                                                                           -1
                                                                           2)
                                                                          (("1"
                                                                            (REWRITE
                                                                             "length_cdr"
                                                                             1)
                                                                            (("1"
                                                                              (LEMMA
                                                                               "nth_cdr"
                                                                               ("c"
                                                                                "hu_list"
                                                                                "i"
                                                                                "i!4"))
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1
                                                                                 1)
                                                                                (("1"
                                                                                  (DELETE
                                                                                   -1)
                                                                                  (("1"
                                                                                    (INST
                                                                                     -7
                                                                                     "i!4+1")
                                                                                    (("1"
                                                                                      (CASE
                                                                                          "i!4<p-2 OR i!4=p-2")
                                                                                      (("1"
                                                                                        (GRIND
                                                                                         :EXCLUDE
                                                                                         "nth")
                                                                                        (("1"
                                                                                          (EXPAND
                                                                                           "nth"
                                                                                           -6)
                                                                                          (("1"
                                                                                            (PROPAX)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (EXPAND
                                                                                           "nth"
                                                                                           1)
                                                                                          (("2"
                                                                                            (PROPAX)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (DELETE
                                                                                         -3
                                                                                         -4
                                                                                         -5
                                                                                         -6
                                                                                         -7
                                                                                         -8
                                                                                         -9
                                                                                         -10
                                                                                         -11
                                                                                         2)
                                                                                        (("2"
                                                                                          (GROUND)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (DELETE
                                                                         -2
                                                                         -3
                                                                         -4
                                                                         -5
                                                                         -6
                                                                         -7
                                                                         -8
                                                                         -9
                                                                         -10
                                                                         -11
                                                                         2
                                                                         3)
                                                                        (("2"
                                                                          (REWRITE
                                                                           "length_append"
                                                                           -1)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (REWRITE
                                                                   "length_append"
                                                                   1)
                                                                  (("2"
                                                                    (REWRITE
                                                                     "length_cdr"
                                                                     1)
                                                                    (("2"
                                                                      (DELETE
                                                                       -1
                                                                       -3
                                                                       -4
                                                                       -5
                                                                       -6
                                                                       -7
                                                                       -9
                                                                       2)
                                                                      (("2"
                                                                        (GRIND)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (DELETE 2 3)
                                          (("2" (PREFIX)
                                            (("2" (DELETE -2 +)
                                              (("2" (GRIND :IF-MATCH NIL)
                                                (("2" (INST 1 "0")
                                                  (("2" (EXPAND "nth")
                                                    (("2" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "i!3`2")
                        (("2" (DELETE -1 -3 -4 2)
                          (("2" (LEMMA "length_non_zero" ("l" "i!3`2"))
                            (("2" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("3" (TYPEPRED "i!3`2")
                        (("3" (DELETE -1 -3 -4 -5 2) (("3" (GROUND) NIL NIL))
                          NIL))
                        NIL)
                       ("4" (PROP)
                        (("4" (SKOLEM!)
                          (("4" (TYPEPRED "i!3" "i!2")
                            (("4"
                              (LEMMA "n_orig"
                               ("P" "P!1" "u" "u!1" "r" "P!1-1"))
                              (("4" (DELETE -4 -5 -6 2)
                                (("4" (GROUND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("5" (PROP)
                        (("5" (SKOLEM-TYPEPRED)
                          (("5" (DELETE -3 -4 2) (("5" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("6" (SKOLEM!)
                        (("6" (TYPEPRED "il!1")
                          (("6" (DELETE -1 -3 -4 2)
                            (("6" (LEMMA "length_non_zero" ("l" "il!1"))
                              (("6" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("7" (SKOSIMP*)
                        (("7" (TYPEPRED "i!3" "i!2")
                          (("7" (DELETE -3 -5 2)
                            (("7"
                              (LEMMA "n_orig"
                               ("P" "P!1" "u" "u!1" "r" "P!1-1"))
                              (("7" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("8" (SKOSIMP*)
                        (("8" (TYPEPRED "i!3")
                          (("8" (DELETE -3 -4 2) (("8" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (CHOICE3)
                      (("1" (PREFIX)
                        (("1" (DELETE 2 3)
                          (("1" (PREFIX)
                            (("1" (DELETE 2 3)
                              (("1" (EXPAND "E")
                                (("1" (EXPAND "rho_middle" -1)
                                  (("1" (SPLIT)
                                    (("1"
                                      (LEMMA "elt_append3"
                                       ("l1" "i!3`1" "l2" "(:i!2:)" "t"
                                        "n_last"))
                                      (("1"
                                        (LEMMA "elt_singleton"
                                         ("t1" "i!2" "t2" "n_last"))
                                        (("1"
                                          (GRIND :IF-MATCH NIL :EXCLUDE "elt")
                                          NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (SKOSIMP*)
                                      (("2"
                                        (COMMENT
                                         "a contradiction is lurking in -2")
                                        (("2" (DECOMPOSE-EQUALITY -1)
                                          (("2" (DECOMPOSE-EQUALITY -2)
                                            (("2" (DECOMPOSE-EQUALITY -1)
                                              (("2" (DECOMPOSE-EQUALITY -2)
                                                (("2"
                                                  (TYPEPRED "nl!1" "i!3`1"
                                                   "i!3`2" "hu_list")
                                                  (("2"
                                                    (DELETE -1 -3 -5 -7 -12 +)
                                                    (("2" (CASE "P!1=p")
                                                      (("1" (REPLACE -8 -3)
                                                        (("1"
                                                          (REWRITE
                                                           "length_append" -3)
                                                          (("1" (REPLACE -2 -3)
                                                            (("1"
                                                              (DELETE -2
                                                                      -4
                                                                      -5
                                                                      -6
                                                                      -7
                                                                      -8
                                                                      -9)
                                                              (("1" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (REPLACE -6 -3)
                                                        (("2"
                                                          (REWRITE "length_cdr"
                                                           -3)
                                                          (("2"
                                                            (DELETE -1
                                                                    -2
                                                                    -5
                                                                    -6
                                                                    -7
                                                                    -8)
                                                            (("2" (GROUND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          ";;; a contradiction is lurking in -2"))
                                        NIL))
                                      NIL)
                                     ("3" (SKOSIMP*)
                                      (("3" (DELETE -1 -3 +)
                                        (("3" (DECOMPOSE-EQUALITY -1) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (DELETE 2 3)
                              (("2" (PREFIX)
                                (("2" (DELETE -2 2 3)
                                  (("2" (PREFIX)
                                    (("1" (DELETE - 2 3)
                                      (("1" (EXPAND "rho_middle")
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL)
                                     ("2" (DELETE - 2 3 4)
                                      (("2" (STOP) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "i!3`2")
                        (("2" (DELETE -1 2 3)
                          (("2" (LEMMA "length_non_zero" ("l" "i!3`2"))
                            (("2" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("3" (TYPEPRED "i!3`2")
                        (("3" (DELETE -1 -3 2 3) (("3" (GROUND) NIL NIL)) NIL))
                        NIL)
                       ("4" (SKOLEM!)
                        (("4" (TYPEPRED "il!1")
                          (("4" (DELETE -1 2 3)
                            (("4" (LEMMA "length_non_zero" ("l" "il!1"))
                              (("4" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|member| CONST-DECL "bool" |sets| NIL)
    (|uniform2_interleave2| FORMULA-DECL NIL |uniform_props3| "../rules/")
    (|#| CONST-DECL "process[T]" |restriction_rules| "../rules/")
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|rho_middle| DEF-DECL "bool" |gnsl_last| NIL)
    (|msg| SHARED-ADT-ACCESSOR-DECL "[event -> M]" |dynetwork| NIL)
    (|complement| CONST-DECL "set" |sets| NIL)
    (|restriction_free_par2| FORMULA-DECL NIL |restriction_rules3| "../rules/")
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|R_middle| CONST-DECL "set[event]" |gnsl_last| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../rules/")
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|prefix_closed| CONST-DECL "bool" |processes| "../rules/")
    (|process| TYPE-EQ-DECL NIL |processes| "../rules/")
    (UROLE_LAST CONST-DECL "process[event]" |gnsl_last| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (INIT CONST-DECL "bool" |gnsl_last| NIL)
    (|\|-| CONST-DECL "bool" |gnsl_last| NIL)
    (|event| TYPE-DECL NIL |dynetwork| NIL)
    (|length_non_zero| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|uniform_prefix2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|uniform_stop2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|restriction_pref| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|n_last| CONST-DECL "Nonces(p, hu(p - 1), p - 1)" |gnsl_last| NIL)
    (|hu_list| CONST-DECL "{x: list[Identity] |
         (length(x) = p) AND (FORALL (i: nat_to_p): nth(x, i) = hu(i))}"
     |gnsl_last| NIL)
    (|Message_public_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Message_conc_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|length_append| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nth_cdr| FORMULA-DECL NIL |listprops| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nth_append| FORMULA-DECL NIL |listprops| NIL)
    (|length_cdr| FORMULA-DECL NIL |more_list_props| "../rules/")
    (|length_nth_equality| FORMULA-DECL NIL |listprops| NIL)
    (|Message_ilist_extensionality| FORMULA-DECL NIL |gnsl_last| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|remove| DEF-DECL "list[T]" |listprops| NIL)
    (|elt| CONST-DECL "bool" |listprops| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|n_orig| FORMULA-DECL NIL |gnsl_last| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Stop| CONST-DECL "process" |processes| "../rules/")
    (|commit| ADT-CONSTRUCTOR-DECL
     "[[Role, list[Identity], Nonce] -> (commit?)]" |gnsl_last| NIL)
    (|commit?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|signal| ADT-CONSTRUCTOR-DECL "[M -> (signal?)]" |dynetwork| NIL)
    (|signal?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|trans| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (trans?)]" |dynetwork| NIL)
    (|trans?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|ilist| ADT-CONSTRUCTOR-DECL "[list[Identity] -> (ilist?)]" |gnsl_last|
     NIL)
    (|ilist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|nlist| ADT-CONSTRUCTOR-DECL "[list[Nonce] -> (nlist?)]" |gnsl_last| NIL)
    (|nlist?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|conc| ADT-CONSTRUCTOR-DECL "[[Message, Message] -> (conc?)]" |gnsl_last|
     NIL)
    (|conc?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public| ADT-CONSTRUCTOR-DECL "[Identity -> (public?)]" |gnsl_last| NIL)
    (E CONST-DECL "Message" |gnsl_last| NIL)
    (|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|rec| ADT-CONSTRUCTOR-DECL "[[I, I, M] -> (rec?)]" |dynetwork| NIL)
    (>> CONST-DECL "process" |processes| "../rules/")
    (|restriction_choice3| FORMULA-DECL NIL |restriction_rules2| "../rules/")
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|uniform3_choice2| FORMULA-DECL NIL |uniform_props2| "../rules/")
    (|elt_singleton| FORMULA-DECL NIL |listprops| NIL)
    (|elt_append3| FORMULA-DECL NIL |listprops| NIL)
    (|x_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (|y_conc| ADT-ACCESSOR-DECL "[(conc?) -> Message]" |gnsl_last| NIL)
    (|x_ilist| ADT-ACCESSOR-DECL "[(ilist?) -> list[Identity]]" |gnsl_last|
     NIL)
    (|x_nlist| ADT-ACCESSOR-DECL "[(nlist?) -> list[Nonce]]" |gnsl_last| NIL)
    (|x_public| ADT-ACCESSOR-DECL "[(public?) -> Identity]" |gnsl_last| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|restriction_stop| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|RankUser| CONST-DECL "setof[trace[event]]" |dynetwork| NIL))
   230912 4208 T SHOSTAK))
 (|authentication_middle| 0
  (|authentication_middle-1| NIL 3399303698 3399305203
   ("" (AUTO-REWRITE-THEORY "sets")
    (("" (SKOLEM!)
      (("" (REWRITE "authentication_by_rank" + ("rho" "rho_middle(i!1)"))
        (("1" (DELETE 2)
          (("1" (COMMENT "intruder's initial knowledge is in rho")
            (("1" (SKOLEM!)
              (("1" (PROP)
                (("1" (EXPAND "INIT")
                  (("1" (EXPAND "rho_middle") (("1" (SMASH) NIL NIL)) NIL))
                  NIL))
                NIL))
              ";;; intruder's initial knowledge is in rho"))
            NIL))
          NIL)
         ("2" (DELETE 2)
          (("2"
            (COMMENT
             "from of a set of messages in rho, no message not in rho can be generated")
            (("2" (EXPAND "|-")
              (("2" (RULE-INDUCT "Gen")
                (("2" (SKOLEM!)
                  (("2" (SMASH)
                    (("1" (INST -2 "m!2") (("1" (PROP) NIL NIL)) NIL)
                     ("2" (DELETE -2)
                      (("2" (SKOLEM!)
                        (("2" (PROP)
                          (("2" (REPLACE -3 1)
                            (("2" (EXPAND "rho_middle" 1)
                              (("2" (PROP) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (DELETE -2)
                      (("3" (SKOLEM!)
                        (("3" (EXPAND "rho_middle" -1) (("3" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("4" (DELETE -2)
                      (("4" (SKOLEM!)
                        (("4" (EXPAND "rho_middle" -1) (("4" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("5" (DELETE -2)
                      (("5" (SKOLEM!)
                        (("5" (FLATTEN)
                          (("5" (EXPAND "rho_middle" -1)
                            (("5" (REPLACE -2 1)
                              (("5" (EXPAND "rho_middle")
                                (("5" (DELETE -2) (("5" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("6" (DELETE -2)
                      (("6" (SKOLEM!)
                        (("6" (PROP)
                          (("6" (REPLACE -2 1)
                            (("6" (DELETE -2)
                              (("6" (EXPAND "rho_middle")
                                (("6" (EXPAND "elt")
                                  (("6" (INST 1 "0")
                                    (("1" (GRIND :EXCLUDE 2) NIL NIL)
                                     ("2" (DELETE 2) (("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("7" (DELETE -2)
                      (("7" (SKOLEM!)
                        (("7" (PROP)
                          (("7" (REPLACE -3 1)
                            (("7" (DELETE -3)
                              (("7" (EXPAND "rho_middle")
                                (("7"
                                  (LEMMA "elt_append3"
                                   ("l1" "nl1!1" "l2" "nl2!1" "t" "n_last"))
                                  (("7" (PROP) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("8" (DELETE -2)
                      (("8" (SKOLEM!)
                        (("8" (PROP)
                          (("8" (REPLACE -3 1)
                            (("8" (DELETE -3)
                              (("8" (REPLACE -2 -1)
                                (("8" (DELETE -2)
                                  (("8" (EXPAND "rho_middle")
                                    (("8"
                                      (LEMMA "elt_append1"
                                       ("l1" "nl1!1" "l2" "nl2!1" "t"
                                        "n_last"))
                                      (("8" (PROP) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("9" (DELETE -2)
                      (("9" (SKOLEM!)
                        (("9" (PROP)
                          (("9" (REPLACE -3 1)
                            (("9" (DELETE -3)
                              (("9" (REPLACE -2 -1)
                                (("9" (DELETE -2)
                                  (("9" (EXPAND "rho_middle")
                                    (("9"
                                      (LEMMA "elt_append2"
                                       ("l1" "nl1!1" "l2" "nl2!1" "t"
                                        "n_last"))
                                      (("9" (PROP) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("10" (DELETE -2)
                      (("10" (SKOLEM!)
                        (("10" (PROP)
                          (("10" (REPLACE -2 1)
                            (("10" (DELETE -1 -2)
                              (("10" (EXPAND "rho_middle")
                                (("10" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("11" (DELETE -2)
                      (("11" (SKOLEM!)
                        (("11" (PROP)
                          (("11" (REPLACE -2 1)
                            (("11" (DELETE -1 -2)
                              (("11" (EXPAND "rho_middle")
                                (("11" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("12" (DELETE -2)
                      (("12" (SKOLEM!)
                        (("12" (PROP)
                          (("12" (REPLACE -3 1)
                            (("12" (DELETE -1 -2 -3)
                              (("12" (EXPAND "rho_middle")
                                (("12" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("13" (DELETE -2)
                      (("13" (SKOLEM!)
                        (("13" (PROP)
                          (("13" (REPLACE -3 1)
                            (("13" (DELETE -1 -2 -3)
                              (("13" (EXPAND "rho_middle")
                                (("13" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("14" (DELETE -2)
                      (("14" (SKOLEM!)
                        (("14" (PROP)
                          (("14" (REPLACE -3 1)
                            (("14" (DELETE -1 -2 -3)
                              (("14" (EXPAND "rho_middle")
                                (("14" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("15" (DELETE -2)
                      (("15" (SKOLEM!)
                        (("15" (PROP)
                          (("15" (REPLACE -3 1)
                            (("15" (DELETE -3)
                              (("15" (TYPEPRED "k!1")
                                (("15" (SPLIT)
                                  (("1" (GRIND) NIL NIL)
                                   ("2" (EXPAND "rho_middle" -3)
                                    (("2" (ASSERT) (("2" (LAZY-GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              ";;; from of a set of messages in rho, no message not in rho can be generated"))
            NIL))
          NIL)
         ("3" (DELETE 2)
          (("3" (COMMENT "users maintain the rank function")
            (("3" (SKOLEM!)
              (("3" (EXPAND "USER")
                (("3" (EXPAND "RankUser")
                  (("3" (INTERLEAVING2)
                    (("1" (INTERLEAVING)
                      (("1" (INTERLEAVING)
                        (("1"
                          (LEMMA "restrictmiddle_init"
                           ("P" "i!3" "u" "i!2" "i" "i!1"))
                          (("1" (GRIND :EXCLUDE ("rho_middle" "UROLE_INIT"))
                            NIL NIL))
                          NIL)
                         ("2"
                          (LEMMA "restrictmiddle_last"
                           ("P" "i!3" "u" "i!2" "i" "i!1"))
                          (("2" (GRIND :EXCLUDE ("rho_middle" "UROLE_LAST"))
                            NIL NIL))
                          NIL))
                        NIL)
                       ("2" (LIFT-IF)
                        (("2" (PROP)
                          (("1" (STOP) NIL NIL)
                           ("2"
                            (LEMMA "restrictmiddle_middle"
                             ("P" "i!3" "u" "i!2" "i" "i!1"))
                            (("2"
                              (GRIND :EXCLUDE ("rho_middle" "UROLE_MIDDLE"))
                              NIL NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (DELETE 3)
                        (("3" (USE "USER_TCC2") (("3" (PROP) NIL NIL)) NIL))
                        NIL)
                       ("4" (DELETE 2) (("4" (USE "USER_TCC2") NIL NIL)) NIL))
                      NIL)
                     ("2" (DELETE 2) (("2" (USE "USER_TCC2") NIL NIL)) NIL)
                     ("3" (DELETE 2)
                      (("3" (SKOLEM!) (("3" (USE "USER_TCC2") NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              ";;; users maintain the rank function"))
            NIL))
          NIL)
         ("4" (DELETE 2)
          (("4" (COMMENT "T is not in rho")
            (("4" (SKOLEM-TYPEPRED)
              (("4" (EXPAND "T")
                (("4" (REPLACE -1 -2)
                  (("4" (DELETE -1) (("4" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              ";;; T is not in rho"))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNTRIED
   ((|RankUser| CONST-DECL "setof[trace[event]]" |dynetwork| NIL)
    (|uniform_interleave2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|restriction_free_par| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|restrictmiddle_last| FORMULA-DECL NIL |gnsl_last| NIL)
    (|restrictmiddle_init| FORMULA-DECL NIL |gnsl_last| NIL)
    (|Par| CONST-DECL "process" |processes| "../rules/")
    (|\|>| CONST-DECL "bool" |satisfaction| "../rules/")
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|uniform_stop2| FORMULA-DECL NIL |uniform_props| "../rules/")
    (|restriction_stop| FORMULA-DECL NIL |restriction_rules| "../rules/")
    (|restrictmiddle_middle| FORMULA-DECL NIL |gnsl_last| NIL)
    (USER_TCC2 EXISTENCE-TCC NIL |gnsl_last| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (UROLE_MIDDLE CONST-DECL "process[event]" |gnsl_last| NIL)
    (|nat_from_3| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|Stop| CONST-DECL "process" |processes| "../rules/")
    (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL)
    (UROLE_LAST CONST-DECL "process[event]" |gnsl_last| NIL)
    (UROLE_INIT CONST-DECL "process[event]" |gnsl_last| NIL)
    (|Interleave| CONST-DECL "process[T]" |multipar| "../rules/")
    (// CONST-DECL "process" |processes| "../rules/")
    (|restriction_free_par2| FORMULA-DECL NIL |restriction_rules3| "../rules/")
    (|complement| CONST-DECL "set" |sets| NIL)
    (|msg| SHARED-ADT-ACCESSOR-DECL "[event -> M]" |dynetwork| NIL)
    (|rec?| ADT-RECOGNIZER-DECL "[event -> boolean]" |dynetwork| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|#| CONST-DECL "process[T]" |restriction_rules| "../rules/")
    (|uniform2_interleave2| FORMULA-DECL NIL |uniform_props3| "../rules/")
    (E CONST-DECL "Message" |gnsl_last| NIL)
    (|remove| DEF-DECL "list[T]" |listprops| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|Key| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|secret?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (|public?| ADT-RECOGNIZER-DECL "[Message -> boolean]" |gnsl_last| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|elt_append2| FORMULA-DECL NIL |listprops| NIL)
    (|elt_append1| FORMULA-DECL NIL |listprops| NIL)
    (|elt_append3| FORMULA-DECL NIL |listprops| NIL)
    (|Role| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|IRpart| CONST-DECL "[[nat_from_2, Identity, Role] -> setof[Nonce]]"
     |gnsl_last| NIL)
    (|nat_to_p| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|hu| CONST-DECL "{h: [nat_to_p -> Identity] |
         FORALL (i, j: nat_to_p): i /= j IMPLIES h(i) /= h(j)}"
     |gnsl_last| NIL)
    (|Nonces| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|n_last| CONST-DECL "Nonces(p, hu(p - 1), p - 1)" |gnsl_last| NIL) NIL
    (|elt| CONST-DECL "bool" |listprops| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|Nonce| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Gen_weak_induction| FORMULA-DECL NIL |gnsl_last| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|\|-| CONST-DECL "bool" |gnsl_last| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (INIT CONST-DECL "bool" |gnsl_last| NIL)
    (|Message| TYPE-DECL NIL |gnsl_last| NIL)
    (|Identity| NONEMPTY-TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (USER CONST-DECL "process[event]" |gnsl_last| NIL)
    (|process| TYPE-EQ-DECL NIL |processes| "../rules/")
    (|prefix_closed| CONST-DECL "bool" |processes| "../rules/")
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../rules/")
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|rho_middle| DEF-DECL "bool" |gnsl_last| NIL)
    (T CONST-DECL "set[event]" |gnsl_last| NIL)
    (|R_middle| CONST-DECL "set[event]" |gnsl_last| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|nat_1_to| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (|p| CONST-DECL "nat_from_2" |gnsl_last| NIL)
    (|nat_from_2| TYPE-EQ-DECL NIL |gnsl_last| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|event| TYPE-DECL NIL |dynetwork| NIL)
    (|authentication_by_rank| FORMULA-DECL NIL |dynetwork| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL))
   1356 1318 NIL NIL)))

