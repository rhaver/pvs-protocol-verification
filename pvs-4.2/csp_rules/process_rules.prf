(|process_rules|
 (|process_add| "" (AUTO-REWRITE "prefix_closed[T]" "prefix[T]" "add[T]")
  (("" (SKOSIMP :PREDS? T)
    (("" (ASSERT)
      (("" (INST - "t!1" "add(t!1, a!1)")
        (("" (ASSERT) (("" (INST?) NIL NIL)) NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|sigma_stop| "" (APPLY-EXTENSIONALITY :HIDE? T) (("" (GRIND) NIL NIL)) NIL)
 (|sigma_choice| "" (SKOLEM!)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    ((""
      (GRIND :DEFS NIL :REWRITES ("sigma" "Choice" "\\/") :THEORIES
       ("sets[T]" "sets[trace[T]]"))
      NIL NIL))
    NIL))
  NIL)
 (|sigma_choice2| ""
  (AUTO-REWRITE "sigma" "Choice" "union" "emptyset" "list2set")
  (("" (SKOLEM!)
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (IFF)
        (("" (GROUND)
          (("1" (SKOLEM-TYPEPRED)
            (("1" (ASSERT)
              (("1" (GROUND)
                (("1" (SKOLEM!)
                  (("1" (INST + "P!1") (("1" (INST?) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST?)
              (("2" (FLATTEN)
                (("2" (INST + "i!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|sigma_pref| "" (SKOLEM!)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (GRIND :IF-MATCH NIL)
      (("1" (INST?) NIL NIL)
       ("2" (INST + "(: a!1 :)")
        (("1" (ASSERT) NIL NIL) ("2" (INST?) NIL NIL)) NIL)
       ("3" (INST + "cons(a!1, t!1)")
        (("1" (ASSERT) NIL NIL) ("2" (INST?) NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|sigma_par| "" (EXPAND "Par")
  (("" (EXPAND "sigma")
    ((""
      (GRIND :DEFS NIL :THEORIES ("sets[T]" "sets[trace[T]]") :IF-MATCH NIL)
      (("" (FORWARD-CHAIN "sigma_prod")
        (("" (REPLACE*) (("" (ASSERT) (("" (REDUCE) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|sigma_free_par| "" (SKOLEM!)
  (("" (EXPAND "//")
    (("" (USE "sigma_par")
      (("" (APPLY-EXTENSIONALITY :HIDE? T)
        (("" (AUTO-REWRITE-THEORY "sets[T]")
          (("" (IFF)
            (("" (GROUND)
              (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (DELETE -2)
                (("2" (EXPAND "sigma" +)
                  (("2" (EXPAND "sigma" -)
                    (("2" (PROP)
                      (("1" (SKOLEM!)
                        (("1" (INST?)
                          (("1" (EXPAND "Par")
                            (("1" (INST + "t!1" "null")
                              (("1" (REWRITE "free_prod_left[T]") NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SKOLEM!)
                        (("2" (QUANT?)
                          (("2" (EXPAND "Par")
                            (("2" (INST + "null" "t!1")
                              (("2" (REWRITE "free_prod_right[T]") NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|sigma_empty| "" (SKOLEM!)
  (("" (GROUND)
    (("1" (APPLY-EXTENSIONALITY :HIDE? T)
      (("1" (EXPAND "Stop")
        (("1" (REWRITE "emptyset_is_empty?" :DIR RL)
          (("1" (GRIND)
            (("1" (INST - "car(x!1)")
              (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (REPLACE*) (("2" (REWRITE "sigma_stop") NIL NIL)) NIL))
    NIL))
  NIL)
 (|sigma_union| "" (EXPAND "sigma" 1 1)
  (("" (EXPAND "union") (("" (PROPAX) NIL NIL)) NIL)) NIL)
 (|sigma_subset| "" (SKOLEM!)
  (("" (REWRITE "sigma_union")
    (("" (EXPAND "union")
      (("" (EXPAND "subset?")
        (("" (SKOSIMP) (("" (EXPAND "member") (("" (INST?) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|sigma_hide| "" (SKOLEM!)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (IFF)
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (EXPAND "/")
            (("1" (EXPAND "sigma" -)
              (("1" (SKOLEM-TYPEPRED)
                (("1" (SKOLEM-TYPEPRED)
                  (("1" (REPLACE -2)
                    (("1" (DELETE -2)
                      (("1" (REWRITE "sigma_proj")
                        (("1" (EXPAND "intersection")
                          (("1" (EXPAND "member")
                            (("1" (FLATTEN)
                              (("1" (EXPAND "difference")
                                (("1" (EXPAND "member")
                                  (("1" (SPLIT)
                                    (("1" (EXPAND "sigma" +)
                                      (("1" (INST 1 "t1!1") NIL NIL)) NIL)
                                     ("2" (EXPAND "complement")
                                      (("2"
                                        (EXPAND "member")
                                        (("2" (PROPAX) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (EXPAND "difference")
            (("2" (EXPAND "member")
              (("2" (FLATTEN)
                (("2" (EXPAND "sigma" -)
                  (("2" (SKOLEM-TYPEPRED)
                    (("2" (EXPAND "/")
                      (("2" (EXPAND "sigma" 2)
                        (("2" (INST 2 "proj(t!1, complement(A!1))")
                          (("1" (REWRITE "sigma_proj")
                            (("1" (EXPAND "intersection")
                              (("1" (EXPAND "member")
                                (("1" (SPLIT)
                                  (("1" (PROPAX) NIL NIL)
                                   ("2" (EXPAND "complement")
                                    (("2" (EXPAND "member")
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (INST?) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|stop_subset| "" (GRIND :EXCLUDE "prefix_closed") NIL NIL)
 (|stop_smallest| "" (GRIND :EXCLUDE "prefix_closed" :IF-MATCH NIL)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (INST?) (("" (IFF) (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL))
  NIL)
 (|choice_commutes| "" (GRIND :EXCLUDE "prefix_closed")
  (("" (REWRITE "union_commutative") NIL NIL)) NIL)
 (|choice_assoc| "" (AUTO-REWRITE "\\/" "Choice")
  (("" (SKOLEM!)
    (("" (ASSERT) (("" (REWRITE "union_associative") NIL NIL)) NIL)) NIL))
  NIL)
 (|choice_idempotent| "" (AUTO-REWRITE "\\/" "Choice")
  (("" (SKOLEM!)
    (("" (ASSERT) (("" (REWRITE "union_idempotent") NIL NIL)) NIL)) NIL))
  NIL)
 (|choice_subset1| "" (AUTO-REWRITE "\\/" "Choice")
  (("" (SKOLEM!) (("" (ASSERT) (("" (REWRITE "union_subset1") NIL NIL)) NIL))
    NIL))
  NIL)
 (|choice_subset2| "" (SKOLEM!)
  (("" (REWRITE "choice_commutes") (("" (REWRITE "choice_subset1") NIL NIL))
    NIL))
  NIL)
 (|choice_stop1| "" (AUTO-REWRITE "\\/" "Choice")
  (("" (SKOLEM!)
    (("" (APPLY-EXTENSIONALITY :HIDE? T) (("" (GRIND) NIL NIL)) NIL)) NIL))
  NIL)
 (|choice_stop2| "" (SKOLEM!)
  (("" (REWRITE "choice_commutes") (("" (REWRITE "choice_stop1") NIL NIL))
    NIL))
  NIL)
 (|choice_stop3| "" (AUTO-REWRITE "choice_idempotent" "stop_smallest")
  (("" (SKOLEM!)
    (("" (GROUND)
      (("1" (USE "choice_subset1")
        (("1" (REPLACE*) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
       ("2" (USE "choice_subset2")
        (("2" (REPLACE*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)
       ("3" (REPLACE*) (("3" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|choice_empty| "" (APPLY-EXTENSIONALITY :HIDE? T) (("" (GRIND) NIL NIL))
  NIL)
 (|choice_add| "" (SKOLEM!)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (GRIND :EXCLUDE "prefix_closed" :IF-MATCH NIL)
      (("1" (INST?) NIL NIL) ("2" (INST?) NIL NIL) ("3" (INST?) NIL NIL))
      NIL))
    NIL))
  NIL)
 (|choice_singleton| "" (SKOLEM!)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (GRIND :EXCLUDE "prefix_closed") NIL NIL)) NIL))
  NIL)
 (|choice_union| "" (SKOLEM!)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (GRIND :EXCLUDE "prefix_closed") NIL NIL)) NIL))
  NIL)
 (|choice_member| "" (GRIND :EXCLUDE "prefix_closed") NIL NIL)
 (|par_commutes| "" (SKOLEM!)
  (("" (EXPAND "Par")
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (IFF)
        (("" (GROUND)
          (("1" (SKOSIMP)
            (("1" (REWRITE "prod_commutes") (("1" (INST?) NIL NIL)) NIL)) NIL)
           ("2" (SKOLEM!)
            (("2" (REWRITE "prod_commutes") (("2" (INST?) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|par_assoc| "" (SKOLEM!)
  (("" (EXPAND "Par")
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (REDUCE :IF-MATCH NIL)
        (("1" (USE "prod_assoc2" ("u" "t2!1"))
          (("1" (ASSERT)
            (("1" (SKOSIMP)
              (("1" (INST + "u1!1" "t2!2") (("1" (INST?) NIL NIL)) NIL)) NIL))
            NIL))
          NIL)
         ("2" (USE "prod_assoc1" ("u" "t1!1"))
          (("2" (ASSERT)
            (("2" (SKOSIMP)
              (("2" (INST + "t1!2" "u1!1") (("2" (INST?) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|par_stop| "" (AUTO-REWRITE "Par" "Stop")
  (("" (SKOLEM!)
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (IFF)
        (("" (PROP)
          (("1" (SKOLEM-TYPEPRED)
            (("1" (ASSERT)
              (("1" (REPLACE*)
                (("1" (FORWARD-CHAIN "prod_null1") (("1" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOLEM-TYPEPRED)
            (("2" (ASSERT)
              (("2" (REPLACE*)
                (("2" (FORWARD-CHAIN "proj_prod2")
                  (("2" (AUTO-REWRITE "proj")
                    (("2" (AUTO-REWRITE "proj" "filter")
                      (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (FORWARD-CHAIN "prod_null3") (("3" (INST?) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|par_full| "" (SKOLEM!)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (GRIND :EXCLUDE ("prod") :REWRITES ("prod_fullset[T]")) NIL NIL))
    NIL))
  NIL)
 (|interleaves_commutes| "" (EXPAND "//")
  (("" (SKOLEM!) (("" (REWRITE "par_commutes") NIL NIL)) NIL)) NIL)
 (|interleaves_assoc| "" (SKOLEM!)
  (("" (EXPAND "//") (("" (REWRITE "par_assoc") NIL NIL)) NIL)) NIL)
 (|interleaves_subset1| "" (GRIND :IF-MATCH NIL)
  (("" (INST + "x!1" "null") (("" (REWRITE "free_prod_left") NIL NIL)) NIL))
  NIL)
 (|interleaves_subset2| "" (GRIND :IF-MATCH NIL)
  (("" (INST + "null" "x!1") (("" (REWRITE "free_prod_right") NIL NIL)) NIL))
  NIL)
 (|interleaves_stop1| "" (SKOLEM!)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (GRIND :EXCLUDE ("prod" "prefix_closed"))
      (("1" (USE "prod_null1" ("t1" "t1!1" "t" "x!1"))
        (("1" (ASSERT) NIL NIL)) NIL)
       ("2" (INST + "null") (("2" (REWRITE "free_prod_left") NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|interleaves_stop2| "" (SKOLEM!)
  (("" (REWRITE "interleaves_commutes")
    (("" (REWRITE "interleaves_stop1") NIL NIL)) NIL))
  NIL)
 (|hide_equiv| "" (SKOSIMP)
  (("" (EXPAND "/")
    (("" (SKOLEM!) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL))
  NIL)
 (|hide_stop| "" (SKOLEM!)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (IFF)
      (("" (GROUND)
        (("1" (EXPAND "/")
          (("1" (SKOLEM-TYPEPRED)
            (("1" (EXPAND "Stop" -1)
              (("1" (REPLACE -1 -2)
                (("1" (REWRITE "proj_null")
                  (("1" (REPLACE -2 1)
                    (("1" (EXPAND "Stop") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (EXPAND "Stop" -1) (("2" (PROPAX) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|hide_emptyset| "" (SKOLEM!)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (IFF)
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (EXPAND "/")
            (("1" (SKOLEM-TYPEPRED)
              (("1" (REWRITE "complement_emptyset")
                (("1" (REWRITE "proj_fullset")
                  (("1" (REPLACE -2 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (EXPAND "/")
            (("2" (INST?)
              (("2" (REWRITE "complement_emptyset")
                (("2" (REWRITE "proj_fullset") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|hide_fullset| "" (SKOLEM!)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (IFF)
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (EXPAND "/")
            (("1" (SKOLEM!)
              (("1" (REWRITE "complement_fullset")
                (("1" (REWRITE "proj_emptyset")
                  (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN) (("2" (EXPAND "Stop") (("2" (PROPAX) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|hide_union| "" (AUTO-REWRITE-THEORY "sets[T]")
  (("" (SKOLEM!)
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (IFF)
        (("" (GROUND)
          (("1" (EXPAND "/")
            (("1" (SKOLEM-TYPEPRED)
              (("1" (SKOLEM-TYPEPRED)
                (("1" (REPLACE -2 -3)
                  (("1" (REWRITE "proj_twice")
                    (("1" (INST?)
                      (("1" (REPLACE -3 1)
                        (("1" (DELETE -)
                          (("1"
                            (CASE "intersection(complement(A!1), complement(B!1)) = complement(union(A!1, B!1))")
                            (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL)
                             ("2" (DELETE 2)
                              (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                                (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND "/")
            (("2" (SKOLEM-TYPEPRED)
              (("2" (INST 1 "proj(t1!1, complement(A!1))")
                (("1" (REWRITE "proj_twice")
                  (("1" (REPLACE -2 1)
                    (("1" (DELETE -)
                      (("1"
                        (CASE "complement(union(A!1, B!1)) = intersection(complement(A!1), complement(B!1))")
                        (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL)
                         ("2" (DELETE 2)
                          (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                            (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (INST?) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|hide_prefix1| "" (AUTO-REWRITE-THEORY "sets[T]")
  (("" (SKOSIMP)
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (IFF)
        (("" (GROUND)
          (("1" (EXPAND ">>" -1)
            (("1" (EXPAND "/" -1)
              (("1" (SKOLEM-TYPEPRED)
                (("1" (SPLIT)
                  (("1" (EXPAND "proj")
                    (("1" (EXPAND "filter")
                      (("1" (LIFT-IF)
                        (("1" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (REPLACE -2 1)
                              (("1" (DELETE -)
                                (("1" (EXPAND ">>") (("1" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (SKOLEM-TYPEPRED)
                    (("2" (REPLACE -2 -3)
                      (("2" (REWRITE "proj_cons")
                        (("2" (REPLACE -3 1)
                          (("2" (EXPAND ">>")
                            (("2" (INST 1 "proj(t1!2, complement(A!1))")
                              (("2" (EXPAND "/") (("2" (INST?) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND ">>" -1)
            (("2" (SKOLEM-TYPEPRED)
              (("2" (EXPAND "/" -1)
                (("2" (SKOLEM-TYPEPRED)
                  (("2" (REPLACE -2 -3)
                    (("2" (REPLACE -3 1)
                      (("2" (EXPAND "/")
                        (("2" (INST 1 "cons(a!1, t1!2)")
                          (("1" (REWRITE "proj_cons") NIL NIL)
                           ("2" (EXPAND ">>") (("2" (INST 1 "t1!2") NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|hide_prefix2| "" (AUTO-REWRITE-THEORY "sets[T]")
  (("" (SKOSIMP)
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (IFF)
        (("" (GROUND)
          (("1" (EXPAND ">>")
            (("1" (EXPAND "/")
              (("1" (SKOLEM-TYPEPRED)
                (("1" (SPLIT)
                  (("1" (INST?)
                    (("1" (DELETE -2 -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                   ("2" (SKOLEM-TYPEPRED)
                    (("2" (INST 1 "t1!2")
                      (("2" (REPLACE -2 -3)
                        (("2" (REPLACE -3 1)
                          (("2" (DELETE -1 -2 -3)
                            (("2" (EXPAND "proj" 1 1)
                              (("2" (EXPAND "filter")
                                (("2" (LIFT-IF)
                                  (("2" (SPLIT)
                                    (("1" (EXPAND "complement" 1 1)
                                      (("1"
                                        (EXPAND "member")
                                        (("1" (PROPAX) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2"
                                        (EXPAND "proj")
                                        (("2" (PROPAX) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND ">>")
            (("2" (EXPAND "/")
              (("2" (SKOLEM-TYPEPRED)
                (("2" (INST 1 "cons(a!1, t1!1)")
                  (("1" (REPLACE -2 1)
                    (("1" (EXPAND "proj")
                      (("1" (EXPAND "filter" 1 2)
                        (("1" (LIFT-IF)
                          (("1" (SPLIT)
                            (("1" (FLATTEN)
                              (("1" (EXPAND "complement")
                                (("1" (EXPAND "member")
                                  (("1" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL)
                             ("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (INST?) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|hide_choice1| "" (AUTO-REWRITE-THEORY "sets[T]")
  (("" (SKOLEM!)
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (IFF)
        (("" (GROUND)
          (("1" (EXPAND "/")
            (("1" (SKOLEM-TYPEPRED)
              (("1" (EXPAND "\\/")
                (("1" (EXPAND "union")
                  (("1" (EXPAND "member")
                    (("1" (FLATTEN)
                      (("1" (SPLIT)
                        (("1" (INST?) NIL NIL) ("2" (INST? 2) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND "\\/")
            (("2" (EXPAND "/")
              (("2" (EXPAND "union")
                (("2" (EXPAND "member")
                  (("2" (SPLIT)
                    (("1" (SKOLEM-TYPEPRED)
                      (("1" (INST?)
                        (("1" (EXPAND "union")
                          (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (SKOLEM-TYPEPRED)
                      (("2" (INST?)
                        (("2" (EXPAND "union")
                          (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|hide_inter| "" (AUTO-REWRITE-THEORY "sets[T]")
  (("" (SKOLEM!)
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (IFF)
        (("" (GROUND)
          (("1" (EXPAND "//" -1)
            (("1" (EXPAND "/" -1)
              (("1" (SKOLEM-TYPEPRED)
                (("1" (EXPAND "Par")
                  (("1" (SKOLEM-TYPEPRED)
                    (("1" (EXPAND "//")
                      (("1" (EXPAND "/")
                        (("1" (EXPAND "Par")
                          (("1"
                            (INST 1 "proj(t1!2, complement(A!1))"
                             "proj(t2!1, complement(A!1))")
                            (("1" (REPLACE -4)
                              (("1" (DELETE -1 -2 -4)
                                (("1" (GENERALIZE "t1!1" "t")
                                  (("1"
                                    (CASE "forall (t, t1, t2 : trace[T]) : prod(emptyset)(t1, t2, t) IMPLIES
                                 prod(emptyset)
                                     (proj(t1, complement(A!1)), proj(t2, complement(A!1)),
                                      proj(t, complement(A!1)))")
                                    (("1" (SKOSIMP)
                                      (("1"
                                        (INST?)
                                        (("1" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (DELETE 2)
                                      (("2"
                                        (INDUCT "t")
                                        (("1" (GRIND) NIL NIL)
                                         ("2"
                                          (SKOSIMP*)
                                          (("2"
                                            (EXPAND "prod" -2)
                                            (("2"
                                              (ASSERT)
                                              (("2"
                                                (SPLIT -2)
                                                (("1"
                                                  (FLATTEN)
                                                  (("1"
                                                    (INST?)
                                                    (("1"
                                                      (ASSERT)
                                                      (("1"
                                                        (REWRITE "proj_cons")
                                                        (("1"
                                                          (LIFT-IF)
                                                          (("1"
                                                            (SPLIT)
                                                            (("1"
                                                              (FLATTEN)
                                                              (("1"
                                                                (EXPAND
                                                                 "prod"
                                                                 2)
                                                                (("1"
                                                                  (ASSERT)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (DELETE

                                                                       3)
                                                                      (("1"
                                                                        (SPLIT)
                                                                        (("1"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL)
                                                                         ("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL)
                                                                         ("3"
                                                                          (LEMMA
                                                                           "list_cons_eta[T]")
                                                                          (("3"
                                                                            (INST
                                                                             -1
                                                                             "t1!3")
                                                                            (("3"
                                                                              (REPLACE

                                                                               -1
                                                                               1

                                                                               RL)
                                                                              (("3"
                                                                                (REPLACE

                                                                                 -3)
                                                                                (("3"
                                                                                  (REWRITE
                                                                                   "proj_cons")
                                                                                  (("3"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (FLATTEN)
                                                              (("2"
                                                                (LEMMA
                                                                 "list_cons_eta[T]")
                                                                (("2"
                                                                  (INST
                                                                   -1
                                                                   "t1!3")
                                                                  (("2"
                                                                    (REPLACE

                                                                     -1
                                                                     1

                                                                     RL)
                                                                    (("2"
                                                                      (REPLACE

                                                                       -4
                                                                       1)
                                                                      (("2"
                                                                        (REWRITE
                                                                         "proj_cons")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (FLATTEN)
                                                  (("2"
                                                    (INST?)
                                                    (("2"
                                                      (ASSERT)
                                                      (("2"
                                                        (REWRITE "proj_cons")
                                                        (("2"
                                                          (LIFT-IF)
                                                          (("2"
                                                            (SPLIT)
                                                            (("1"
                                                              (FLATTEN)
                                                              (("1"
                                                                (EXPAND
                                                                 "prod"
                                                                 2)
                                                                (("1"
                                                                  (ASSERT)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (DELETE

                                                                       2)
                                                                      (("1"
                                                                        (SPLIT)
                                                                        (("1"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL)
                                                                         ("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL)
                                                                         ("3"
                                                                          (LEMMA
                                                                           "list_cons_eta[T]")
                                                                          (("3"
                                                                            (INST
                                                                             -1
                                                                             "t2!2")
                                                                            (("3"
                                                                              (REPLACE

                                                                               -1
                                                                               1

                                                                               RL)
                                                                              (("3"
                                                                                (REPLACE

                                                                                 -3)
                                                                                (("3"
                                                                                  (REWRITE
                                                                                   "proj_cons")
                                                                                  (("3"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (FLATTEN)
                                                              (("2"
                                                                (LEMMA
                                                                 "list_cons_eta[T]")
                                                                (("2"
                                                                  (INST
                                                                   -1
                                                                   "t2!2")
                                                                  (("2"
                                                                    (REPLACE

                                                                     -1
                                                                     1

                                                                     RL)
                                                                    (("2"
                                                                      (REPLACE

                                                                       -4)
                                                                      (("2"
                                                                        (REWRITE
                                                                         "proj_cons")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (INST 1 "t2!1") NIL NIL)
                             ("3" (INST 1 "t1!2") NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND "//" -1)
            (("2" (EXPAND "/" -1)
              (("2" (EXPAND "Par")
                (("2" (SKOLEM-TYPEPRED)
                  (("2" (SKOLEM-TYPEPRED)
                    (("2" (SKOLEM-TYPEPRED)
                      (("2" (REPLACE -3)
                        (("2" (REPLACE -4)
                          (("2" (DELETE -3 -4)
                            (("2"
                              (CASE "forall (t, t1, t2 : trace[T]) : (P2!1(t2) AND P1!1(t1) AND prod(emptyset)(proj(t1, complement(A!1)), proj(t2, complement(A!1)), t)) IMPLIES ((P1!1 // P2!1) / A!1)(t)")
                              (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)
                               ("2" (DELETE -1 -2 -3 2)
                                (("2" (INDUCT "t" :NAME "add_induction[T]")
                                  (("1" (SKOSIMP)
                                    (("1" (TYPEPRED "((P1!1 // P2!1) / A!1)")
                                      (("1" (PROPAX) NIL NIL)) NIL))
                                    NIL)
                                   ("2" (SKOSIMP*)
                                    (("2" (REWRITE "prod_add")
                                      (("2"
                                        (SPLIT)
                                        (("1"
                                          (SKOSIMP)
                                          (("1" (POSTPONE) NIL NIL))
                                          NIL)
                                         ("2"
                                          (SKOSIMP)
                                          (("2"
                                            (EXPAND "//")
                                            (("2"
                                              (EXPAND "Par")
                                              (("2"
                                                (EXPAND "/")
                                                (("2"
                                                  (INST -3 "t1!4" "t2!2")
                                                  (("2"
                                                    (ASSERT)
                                                    (("2" (POSTPONE) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|hide_sigma| "" (SKOSIMP)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (IFF)
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (EXPAND "/")
            (("1" (SKOLEM-TYPEPRED)
              (("1" (CASE "t1!1 = x!1")
                (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL)
                 ("2" (REPLACE -2)
                  (("2" (DELETE -1 -2 2)
                    (("2" (GENERALIZE "t1!1" "t")
                      (("2" (INDUCT "t" :NAME "add_induction[T]")
                        (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                         ("3" (SKOSIMP*)
                          (("3" (ASSERT)
                            (("3" (TYPEPRED "P!1")
                              (("3" (DELETE -1)
                                (("3" (EXPAND "prefix_closed")
                                  (("3" (INST?)
                                    (("3" (INST -1 "add(l!1, a!1)")
                                      (("3"
                                        (ASSERT)
                                        (("3"
                                          (USE "prefix_add1[T]")
                                          (("3"
                                            (ASSERT)
                                            (("3"
                                              (DELETE -1)
                                              (("3"
                                                (EXPAND "disjoint?")
                                                (("3"
                                                  (EXPAND "empty?")
                                                  (("3"
                                                    (EXPAND "intersection")
                                                    (("3"
                                                      (EXPAND "member")
                                                      (("3"
                                                        (INST?)
                                                        (("3"
                                                          (SPLIT)
                                                          (("1"
                                                            (EXPAND "sigma")
                                                            (("1"
                                                              (INST
                                                               1
                                                               "add(l!1, a!1)")
                                                              (("1"
                                                                (DELETE

                                                                 -1
                                                                 -2

                                                                 -3
                                                                 2)
                                                                (("1"
                                                                  (REWRITE
                                                                   "sigma_add")
                                                                  (("1"
                                                                    (GRIND)
                                                                    NIL
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (REWRITE
                                                             "proj_add")
                                                            (("2"
                                                              (LIFT-IF)
                                                              (("2"
                                                                (SPLIT)
                                                                (("1"
                                                                  (EXPAND
                                                                   "complement"
                                                                   1
                                                                   1)
                                                                  (("1"
                                                                    (PROPAX)
                                                                    NIL
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (FLATTEN)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "complement")
                                                                    (("2"
                                                                      (EXPAND
                                                                       "member")
                                                                      (("2"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (EXPAND "/")
            (("2" (INST?)
              (("2" (GENERALIZE "x!1" "t")
                (("2" (INDUCT "t" :NAME "add_induction[T]")
                  (("1" (GRIND) NIL NIL)
                   ("2" (SKOSIMP*)
                    (("2" (ASSERT)
                      (("2" (TYPEPRED "P!1")
                        (("2" (DELETE -1)
                          (("2" (EXPAND "prefix_closed")
                            (("2" (INST?)
                              (("2" (INST -1 "add(l!1, a!1)")
                                (("2" (ASSERT)
                                  (("2" (USE "prefix_add1[T]")
                                    (("2" (ASSERT)
                                      (("2"
                                        (DELETE -1)
                                        (("2"
                                          (EXPAND "disjoint?")
                                          (("2"
                                            (EXPAND "empty?")
                                            (("2"
                                              (EXPAND "intersection")
                                              (("2"
                                                (EXPAND "member")
                                                (("2"
                                                  (INST?)
                                                  (("2"
                                                    (SPLIT)
                                                    (("1"
                                                      (EXPAND "sigma")
                                                      (("1"
                                                        (INST
                                                         1
                                                         "add(l!1, a!1)")
                                                        (("1"
                                                          (REWRITE
                                                           "sigma_add")
                                                          (("1"
                                                            (GRIND)
                                                            NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2"
                                                      (REWRITE "proj_add")
                                                      (("2"
                                                        (LIFT-IF)
                                                        (("2"
                                                          (SPLIT)
                                                          (("1"
                                                            (EXPAND
                                                             "complement"
                                                             1
                                                             1)
                                                            (("1"
                                                              (PROPAX)
                                                              NIL
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (FLATTEN)
                                                            (("2"
                                                              (EXPAND
                                                               "complement")
                                                              (("2"
                                                                (EXPAND
                                                                 "member")
                                                                (("2"
                                                                  (PROPAX)
                                                                  NIL
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|hide_twice| "" (SKOLEM!)
  (("" (USE "hide_sigma")
    (("" (ASSERT)
      (("" (DELETE 2)
        (("" (EXPAND "disjoint?")
          (("" (EXPAND "empty?")
            (("" (EXPAND "intersection")
              (("" (EXPAND "member")
                (("" (SKOSIMP)
                  (("" (USE "sigma_par")
                    (("" (EXPAND "subset?")
                      (("" (EXPAND "member")
                        (("" (INST?)
                          (("" (ASSERT)
                            (("" (DELETE -2)
                              (("" (EXPAND "union")
                                (("" (EXPAND "member")
                                  (("" (SPLIT)
                                    (("1" (REWRITE "sigma_hide")
                                      (("1"
                                        (EXPAND "difference")
                                        (("1"
                                          (EXPAND "member")
                                          (("1" (PROPAX) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (REWRITE "sigma_hide")
                                      (("2"
                                        (EXPAND "difference")
                                        (("2"
                                          (EXPAND "member")
                                          (("2" (PROPAX) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|hide_par| "" (AUTO-REWRITE-THEORY "sets")
  (("" (SKOSIMP)
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (IFF)
        (("" (GROUND)
          (("1" (EXPAND "Par" -1)
            (("1" (SKOLEM-TYPEPRED)
              (("1" (EXPAND "/" -1)
                (("1" (SKOLEM-TYPEPRED)
                  (("1" (EXPAND "/" -3)
                    (("1" (SKOLEM-TYPEPRED)
                      (("1" (REPLACE -3)
                        (("1" (REPLACE -4)
                          (("1" (DELETE -3 -4)
                            (("1" (USE "prod_proj1[T]")
                              (("1" (ASSERT)
                                (("1" (SPLIT)
                                  (("1" (SKOSIMP)
                                    (("1" (EXPAND "/" 1)
                                      (("1"
                                        (INST?)
                                        (("1"
                                          (EXPAND "Par" 1)
                                          (("1" (INST?) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND "/" -1)
            (("2" (SKOLEM-TYPEPRED)
              (("2" (EXPAND "Par" -1)
                (("2" (SKOLEM-TYPEPRED)
                  (("2" (FORWARD-CHAIN "prod_proj2")
                    (("2" (INST?)
                      (("2" (REPLACE -5 :DIR RL)
                        (("2" (EXPAND "Par" 1)
                          (("2" (INST?)
                            (("1" (EXPAND "/") (("1" (INST 1 "t2!1") NIL NIL))
                              NIL)
                             ("2" (EXPAND "/") (("2" (INST?) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|hide_par2| "" (SKOSIMP)
  (("" (LEMMA "hide_sigma")
    (("" (INST -1 "B!1" "P1!1")
      (("" (ASSERT)
        (("" (REPLACE -1 1 RL)
          (("" (LEMMA "hide_par")
            (("" (INST -1 "A!1" "B!1" "P1!1" "P2!1") (("" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|rename_prefix| "" (SKOSIMP)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (IFF)
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (EXPAND "rename" -1)
            (("1" (SKOLEM-TYPEPRED)
              (("1" (EXPAND ">>" -1)
                (("1" (SPLIT)
                  (("1" (CASE "t1!1 = null")
                    (("1" (REPLACE -1 -3)
                      (("1" (EXPAND "trename") (("1" (PROPAX) NIL NIL)) NIL))
                      NIL)
                     ("2" (ASSERT) NIL NIL))
                    NIL)
                   ("2" (SKOLEM-TYPEPRED)
                    (("2" (REPLACE -2 -3)
                      (("2" (EXPAND "trename" -3)
                        (("2" (FLATTEN)
                          (("2" (EXPAND "Choice")
                            (("2" (INST 1 "car(x!1) >> rename(P!1, R!1)")
                              (("1" (EXPAND ">>" 1)
                                (("1" (INST 1 "cdr(x!1)")
                                  (("1" (LEMMA "list_cons_eta[T]")
                                    (("1" (INST?) (("1" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL)
                                   ("2" (EXPAND "rename")
                                    (("2" (INST?) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("2" (INST?) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (EXPAND "Choice")
            (("2" (SKOLEM-TYPEPRED)
              (("2" (DELETE -1 -2)
                (("2" (SKOLEM-TYPEPRED)
                  (("2" (FLATTEN)
                    (("2" (EXPAND ">>" -2)
                      (("2" (REPLACE -2 -3)
                        (("2" (DELETE -2)
                          (("2" (BETA)
                            (("2" (SPLIT)
                              (("1" (CASE "x!1 = null")
                                (("1" (REPLACE -1 1)
                                  (("1" (TYPEPRED "rename(a!1 >> P!1, R!1)")
                                    (("1" (PROPAX) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL)
                               ("2" (SKOLEM-TYPEPRED)
                                (("2" (EXPAND "rename")
                                  (("2" (SKOLEM-TYPEPRED)
                                    (("2" (INST 1 "cons(a!1, t1!2)")
                                      (("1"
                                        (REPLACE -3 1)
                                        (("1"
                                          (EXPAND "trename" 1)
                                          (("1"
                                            (SPLIT)
                                            (("1" (PROPAX) NIL NIL)
                                             ("2" (PROPAX) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2"
                                        (EXPAND ">>" 1)
                                        (("2" (INST?) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|rename_choice| "" (SKOSIMP)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (IFF)
      (("" (GROUND)
        (("1" (EXPAND "\\/" -1)
          (("1" (EXPAND "rename" -1)
            (("1" (SKOLEM-TYPEPRED)
              (("1" (EXPAND "\\/" 1)
                (("1" (EXPAND "union")
                  (("1" (EXPAND "member")
                    (("1" (FLATTEN)
                      (("1" (SPLIT)
                        (("1" (EXPAND "rename" 1) (("1" (INST?) NIL NIL)) NIL)
                         ("2" (EXPAND "rename" 2) (("2" (INST?) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (EXPAND "\\/" -1)
          (("2" (EXPAND "union")
            (("2" (EXPAND "member")
              (("2" (SPLIT)
                (("1" (EXPAND "rename")
                  (("1" (SKOLEM-TYPEPRED)
                    (("1" (INST?)
                      (("1" (DELETE -2) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "rename")
                  (("2" (SKOLEM-TYPEPRED)
                    (("2" (INST?)
                      (("2" (DELETE -2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|rename_choice2| "" (SKOSIMP)
  (("" (APPLY-EXTENSIONALITY :HIDE? T)
    (("" (IFF)
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (EXPAND "rename" -1)
            (("1" (SKOLEM-TYPEPRED)
              (("1" (EXPAND "Choice")
                (("1" (SPLIT)
                  (("1" (CASE "t1!1 = null")
                    (("1" (REPLACE -1 -3)
                      (("1" (EXPAND "trename") (("1" (PROPAX) NIL NIL)) NIL))
                      NIL)
                     ("2" (ASSERT) NIL NIL))
                    NIL)
                   ("2" (SKOLEM-TYPEPRED)
                    (("2" (DELETE -1 -2)
                      (("2" (INST 1 "rename(P!1, R!1)")
                        (("1" (EXPAND "rename") (("1" (INST?) NIL NIL)) NIL)
                         ("2" (INST?) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (EXPAND "Choice" -1)
            (("2" (SKOLEM-TYPEPRED)
              (("2" (DELETE -1 -2)
                (("2" (SKOLEM-TYPEPRED)
                  (("2" (DELETE -1 -2)
                    (("2" (REPLACE -2 -3)
                      (("2" (DELETE -2)
                        (("2" (EXPAND "rename")
                          (("2" (SKOLEM-TYPEPRED)
                            (("2" (INST?)
                              (("2" (EXPAND "Choice")
                                (("2" (FLATTEN)
                                  (("2" (INST 2 "P2!1") NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL))

